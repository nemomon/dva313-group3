{"version":3,"sources":["components/allfunctions.jsx","components/PHPController.jsx","components/navigationBar.jsx","components/allocation_tab/allocation_view/allocationView.jsx","components/allocation_tab/persons_list/search.jsx","components/allocation_tab/allocationTab.jsx","components/personTab.jsx","components/projectTab.jsx","components/spendingTab.jsx","components/remainingTab.jsx","components/endBalanceTab.jsx","App.js","serviceWorker.js","index.js"],"names":["BASE","Person","Object","classCallCheck","this","JSON","parse","$","ajax","type","url","dataType","async","done","response","responseText","Id","data","Name","Salary","SocialFactor","IncrementFactor","Project","EndDate","Stl","ExternalSalary","ExternalOverhead","ExternalOtherCost","InternalSalary","InternalOverhead","InternalOtherCost","SpendingExternalSalary","SpendingExternalOverhead","SpendingExternalOtherCost","SpendingInternalSalary","SpendingInternalOverhead","SpendingInternalOtherCost","SpendingDate","OverheadConstant","Allocation","personId","projectId","Percentage","StartDate","EndBalance","Remaining","PHPController","instance","console","log","init","personClass","personTable","getAllPerson","projectClass","projectTable","getAllProject","allocationClass","allocationTable","getAllAllocation","endbalanceClass","endbalanceTable","getAllEndBalance","remainingClass","remainingTable","getAllRemaining","deletedPersons","deletedProjects","deletedAllocations","newPerson","charAt","push","refreshEndBalance","person","i","length","splice","j","newProject","refreshRemaining","project","newAllocation","allocation","allocations","joinSalaryCost","row","all_projectId","pr_SpendingDate","all_StartDate","all_EndDate","all_Percentage","p_SocialFactor","p_Salary","SalaryCost","sum","date","monthDiff","parseFloat","joinEndBalance","pr_Id","pr_Name","pr_ExternalSalary","pr_InternalSalary","r_ExternalSalary","sc_Salary","r_InternalSalary","pr_ExternalOverhead","pr_InternalOverhead","r_ExternalOverhead","r_InternalOverhead","pr_OverheadConstant","r_ExternalOtherCost,","r_InternalOtherCost","Math","round","d1","d2","Date","getMonth","getFullYear","deleteAllocation","deletePerson","deleteProject","insertedId","insertPerson","updatePerson","insertProject","alert","updateProject","insertAllocation","updateAllocation","window","location","reload","NavigationBar","state","isOpen","toggleCollapse","_this","setState","react_default","a","createElement","mdbreact","className","dark","expand","onClick","id","navbar","left","to","saveAll","React","Component","AllocationView","props","possibleConstructorReturn","getPrototypeOf","call","options","width","start","end","groupOrder","orientation","axis","item","editable","add","remove","updateGroup","updateTime","zoomMax","zoomMin","align","stack","onAdd","callback","onRemove","onMoving","onMove","onInitialDrawComplete","onUpdate","toggleGroups","showEmptyGroups","toggleRef","current","innerHTML","_getToggleText","updateTimelineGroups","items","vis","DataSet","groups","total","timeline","createRef","preInit","createGroups","createTotalTimeline","attachEvents","container","document","getElementById","Timeline","postInit","undefined","group","convertDateToYYYYMMDD","newAlloc","Flag","content","alertProjectEndExceeded","removeAlloc","value","prompt","trim","floor","updateAlloc","year","month","nextMonth","nextYear","setWindow","animation","day","getDate","style","get","_this2","on","event","preventDefault","properties","getEventProperties","splitAllocation","snappedTime","_d","args","updateTotalTimeline","heigth","rate","ele","getElementsByClassName","height","redraw","allocId","splitDate","alloc","startDate","endDate","empRate","id1","id2","newItem1","newItem2","newAlloc1","newAlloc2","rows","setOptions","filter","_createTotalTimeline","totalSet","sortedDates","fields","order","intersections","currentDate","parseInt","tag","color","getColor","_this3","clear","getAllocation","forEach","addAllocation","projects","getProjects","visible","notEmptyGroups","distinct","allGroups","getIds","difference","x","indexOf","_showAllGroups","update","setTimelineHeight","getAllocations","str","personName","ref","Search","handleChange","searchString","refs","search","focus","_users","persons","toLowerCase","user","match","onChange","placeholder","map","l","updateAllocationView","href","email","AllocationTab","name","selectedId","selectedName","getPersons","persons_list_search","allocationView","personTab","createCustomInsertButton","openModal","paddingLeft","paddingRight","paddingTop","paddingBottom","createCustomDeleteButton","onBtnClick","onAddRow","colInfo","errorCallback","isNaN","hidden","defaultSortName","defaultSortOrder","rowKeys","PHP","removePerson","cellName","cellValue","toast","error","_ref","closeToast","_ref3","_ref4","_ref2","updatedPerson","insertBtn","deleteBtn","afterInsertRow","onAfterInsertRow","afterDeleteRow","onAfterDeleteRow","cellEditProp","mode","blurToSave","beforeSaveCell","onBeforeSaveCell","afterSaveCell","onAfterSaveCell","react_toastify_lib","lib","cellEdit","selectRow","insertRow","deleteRow","tableStyle","backgroundColor","dataField","isKey","dataSort","autoValue","projectTab","removeProject","_ref5","updatedProject","spendingTab","spendings","remainingTab","remainings","getRemainings","cellColorFormatter","cell","c","summaryFormatter","endBalanceTab","handleEvent","endbalances","getEndBalances","class","text","toggleButtonText","dataFormat","App","react_body_backgroundcolor_default","Fragment","navigationBar","Route","path","component","PersonTab","ProjectTab","SpendingTab","RemainingTab","EndBalanceTab","withRouter","Boolean","hostname","app","BrowserRouter_default","src_App_0","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f6d7d47e.chunk.js","sourcesContent":["import $ from \"jquery\";\r\n\r\nconst BASE = \"http://localhost/project/\";\r\n//const BASE = \"../\";\r\nclass Person{\r\n\r\n  constructor() {\r\n \r\n  }\r\n   \r\n   getAllPerson() {\r\n   var r = JSON.parse( $.ajax({\r\n    type: 'POST',\r\n    url: BASE + 'getAllPerson.php',\r\n    dataType: 'json',\r\n    async: false,\r\n    done: function(response) {\r\n        return response;\r\n    }\r\n\t\r\n}).responseText);\r\n   \r\n   return r;\r\n  }\r\n  \r\n  \r\n deletePerson(Id){\r\n   var r = $.ajax({\r\n    type: 'POST',\r\n    url: BASE +'deletePerson.php',\r\n\tdata: {Id: Id},\r\n    async: false,\r\n    done: function(response) {\r\n        return response;\r\n    }\r\n}).responseText;\r\n   return r;\r\n  }\r\n\r\n\r\n insertPerson(Name, Salary, SocialFactor, IncrementFactor){\r\n   var r = $.ajax({\r\n    type: 'POST',\r\n    url: BASE + 'insertPerson.php',\r\n\tdata: {Name: Name, Salary: Salary, SocialFactor: SocialFactor, IncrementFactor: IncrementFactor},\r\n    async: false,\r\n    done: function(response) {\r\n        return response;\r\n    }\r\n}).responseText;\r\n   return r;\r\n  }\r\n  \r\n  \r\n  \r\n  updatePerson(Id, Name, Salary, SocialFactor, IncrementFactor){\r\n\tvar r = $.ajax({ \r\n    type: 'POST',\r\n    url: BASE + 'updatePerson.php',\r\n    data: {Id: Id, Name: Name, Salary: Salary, SocialFactor: SocialFactor, IncrementFactor: IncrementFactor},\r\n    async: false,\r\n    done: function(response){\r\n        return response ;    \r\n    }\r\n}).responseText;\r\nreturn r;\r\n}\r\n}\r\n\r\n// project class\r\nclass Project {\r\n\r\n  constructor() {\r\n \r\n  }\r\n   \r\n   getAllProject() {\r\n   var r = JSON.parse( $.ajax({\r\n    type: 'POST',\r\n    url: BASE + 'getAllProject.php',\r\n    dataType: 'json',\r\n    async: false,\r\n    done: function(response) {\r\n        return response;\r\n    }\r\n\t\r\n}).responseText);\r\n   \r\n   return r;\r\n  }\r\n  \r\n  \r\n deleteProject(Id){\r\n   var r = $.ajax({\r\n    type: 'POST',\r\n    url: BASE + 'deleteProject.php',\r\n\tdata: {Id: Id},\r\n    async: false,\r\n    done: function(response) {\r\n        return response;\r\n    }\r\n}).responseText;\r\n   return r;\r\n  }\r\n\r\n\r\n insertProject(Name, EndDate, Stl, ExternalSalary, ExternalOverhead, ExternalOtherCost, InternalSalary, InternalOverhead, InternalOtherCost, SpendingExternalSalary, \r\n SpendingExternalOverhead, SpendingExternalOtherCost, SpendingInternalSalary, SpendingInternalOverhead, SpendingInternalOtherCost, SpendingDate, OverheadConstant){\r\n   var r = $.ajax({\r\n    type: 'POST',\r\n    url: BASE + 'insertProject.php',\r\n\tdata: {Name: Name, EndDate: EndDate, Stl: Stl, ExternalSalary: ExternalSalary, ExternalOverhead: ExternalOverhead, ExternalOtherCost: ExternalOtherCost, \r\n\tInternalSalary: InternalSalary, InternalOverhead: InternalOverhead, InternalOtherCost: InternalOtherCost, SpendingExternalSalary: SpendingExternalSalary, \r\n\tSpendingExternalOverhead: SpendingExternalOverhead, SpendingExternalOtherCost: SpendingExternalOtherCost, \r\n\tSpendingInternalSalary: SpendingInternalSalary, SpendingInternalOverhead: SpendingInternalOverhead, SpendingInternalOtherCost: SpendingInternalOtherCost, SpendingDate: SpendingDate, OverheadConstant: OverheadConstant},\r\n    async: false,\r\n    done: function(response) {\r\n        return response;\r\n    }\r\n}).responseText;\r\n   return r;\r\n  }\r\n  \r\n  \r\n  \r\n  updateProject(Id, Name, EndDate, Stl, ExternalSalary, ExternalOverhead, ExternalOtherCost, InternalSalary, InternalOverhead, InternalOtherCost, SpendingExternalSalary, \r\n SpendingExternalOverhead, SpendingExternalOtherCost, SpendingInternalSalary, SpendingInternalOverhead, SpendingInternalOtherCost, SpendingDate, OverheadConstant){\r\n\tvar r = $.ajax({ \r\n    type: 'POST',\r\n    url: BASE + 'updateProject.php',\r\n    data: {Id: Id, Name: Name, EndDate: EndDate, Stl: Stl, ExternalSalary: ExternalSalary, ExternalOverhead: ExternalOverhead, ExternalOtherCost: ExternalOtherCost, \r\n\tInternalSalary: InternalSalary, InternalOverhead: InternalOverhead, InternalOtherCost: InternalOtherCost, SpendingExternalSalary: SpendingExternalSalary, \r\n\tSpendingExternalOverhead: SpendingExternalOverhead, SpendingExternalOtherCost: SpendingExternalOtherCost, \r\n\tSpendingInternalSalary: SpendingInternalSalary, SpendingInternalOverhead: SpendingInternalOverhead, SpendingInternalOtherCost: SpendingInternalOtherCost, SpendingDate: SpendingDate, OverheadConstant: OverheadConstant},\r\n    async: false,\r\n    done: function(response){\r\n        return response ;    \r\n    }\r\n}).responseText;\r\nreturn r;\r\n}\r\n  \r\n}\r\n\r\n//allcotion\r\n\r\nclass Allocation {\r\n\r\n  constructor() {\r\n \r\n  }\r\n   \r\n   getAllAllocation() {\r\n   var r = JSON.parse( $.ajax({\r\n    type: 'POST',\r\n    url: BASE + 'getAllAllocation.php',\r\n    dataType: 'json',\r\n    async: false,\r\n    done: function(response) {\r\n        return response;\r\n    }\r\n\t\r\n}).responseText);\r\n   \r\n   return r;\r\n  }\r\n  \r\n  \r\n deleteAllocation(Id){\r\n   var r = $.ajax({\r\n    type: 'POST',\r\n    url: BASE + 'deleteAllocation.php',\r\n\tdata: {Id: Id},\r\n    async: false,\r\n    done: function(response) {\r\n        return response;\r\n    }\r\n}).responseText;\r\n   return r;\r\n  }\r\n\r\n\r\n insertAllocation(personId, projectId, Percentage, StartDate, EndDate){\r\n   var r = $.ajax({\r\n    type: 'POST',\r\n    url: BASE + 'insertAllocation.php',\r\n\tdata: {personId: personId, projectId: projectId, Percentage: Percentage, StartDate: StartDate, EndDate: EndDate},\r\n    async: false,\r\n    done: function(response) {\r\n        return response;\r\n    }\r\n}).responseText;\r\n   return r;\r\n  }\r\n  \r\n  \r\n  \r\n  updateAllocation(Id, Percentage, StartDate, EndDate){\r\n\tvar r = $.ajax({ \r\n    type: 'POST',\r\n    url: BASE +'updateAllocation.php',\r\n    data: {Id: Id, Percentage: Percentage, StartDate: StartDate, EndDate: EndDate},\r\n    async: false,\r\n    done: function(response){\r\n        return response ;    \r\n    }\r\n}).responseText;\r\nreturn r;\r\n}\r\n }\r\n \r\n // spending class\r\nclass Spending {\r\n\r\n  constructor() {\r\n \r\n  }\r\n   \r\n   getAllSpending() {\r\n   var r = JSON.parse( $.ajax({\r\n    type: 'POST',\r\n    url: BASE + 'getAllSpending.php',\r\n    dataType: 'json',\r\n    async: false,\r\n    done: function(response) {\r\n        return response;\r\n    }\r\n\t\r\n}).responseText);\r\n   \r\n   return r;\r\n  }\r\n}\r\n \r\n \r\n// Endbalance\r\n\r\nclass EndBalance {\r\n\r\n  constructor() {\r\n \r\n  }\r\n   \r\n   getAllEndBalance() {\r\n   var r = JSON.parse( $.ajax({\r\n    type: 'POST',\r\n    url: BASE + 'getAllEndbalance.php',\r\n    dataType: 'json',\r\n    async: false,\r\n    done: function(response) {\r\n        return response;\r\n    }\r\n\t\r\n}).responseText);\r\n   \r\n   return r;\r\n  }\r\n }\r\n\r\n \r\n \r\n// Remaining class\r\nclass Remaining {\r\n\r\n  constructor() {\r\n \r\n  }\r\n   \r\n   getAllRemaining() {\r\n   var r = JSON.parse( $.ajax({\r\n    type: 'POST',\r\n    url: BASE + 'getAllRemaining.php',\r\n    dataType: 'json',\r\n    async: false,\r\n    done: function(response) {\r\n        return response;\r\n    }\r\n\t\r\n}).responseText);\r\n   \r\n   return r;\r\n  }\r\n}\r\n\r\nexport {Person, Project, Allocation, Spending, EndBalance, Remaining};","import {Person, Project, Allocation, Spending, EndBalance, Remaining} from \"./allfunctions.jsx\";\r\n\r\nclass PHPController {\r\n    constructor() {\r\n        if (!PHPController.instance) {\r\n          PHPController.instance = this;\r\n          console.log(\"PHPController created\");\r\n          this.init();\r\n        }\r\n        return PHPController.instance;\r\n      }\r\n\r\n    init(){\r\n      let personClass = new Person();\r\n      this.personClass= personClass;\r\n      this.personTable= personClass.getAllPerson();\r\n\r\n      let projectClass = new Project(); // create an object from project class\r\n      this.projectClass= projectClass;  // save the class object locally\r\n      this.projectTable= projectClass.getAllProject(); //create a local array for all projects\r\n\r\n      let allocationClass = new Allocation();\r\n      this.allocationClass= allocationClass;\r\n      this.allocationTable= allocationClass.getAllAllocation();\r\n\r\n      let endbalanceClass = new EndBalance();\r\n      this.endbalanceClass= endbalanceClass;\r\n      this.endbalanceTable= endbalanceClass.getAllEndBalance();\r\n\r\n      let remainingClass = new Remaining();\r\n      this.remainingClass= remainingClass;\r\n      this.remainingTable= remainingClass.getAllRemaining();\r\n\r\n      this.deletedPersons=[];\r\n      this.deletedProjects=[];\r\n      this.deletedAllocations=[];\r\n    }\r\n\r\n    getEndBalances() {\r\n        return this.endbalanceTable;\r\n    }\r\n\r\n    getRemainings() {\r\n    return this.remainingTable;\r\n    }\r\n    \r\n    getPersons() {\r\n        return this.personTable;\r\n    }\r\n    \r\n    getProjects() {\r\n        return this.projectTable;\r\n    }\r\n\r\n    \r\n     //Person\r\n     insertPerson(newPerson){\r\n\r\n       if (newPerson['Id'].charAt(0) == 'T' && newPerson['Flag'] =='I' ){\r\n         this.personTable.push(newPerson);\r\n       }\r\n       this.refreshEndBalance();\r\n     }\r\n\r\n\r\n     updatePerson(person){\r\n\r\n       for (var i = 0; i < this.personTable.length; i++) {\r\n         if(this.personTable[i]['Id']==person['Id'] && person['Flag'] =='U'){\r\n\r\n          this.personTable[i]['Name']=person['Name'];\r\n          this.personTable[i]['Salary']=person['Salary'];\r\n          this.personTable[i]['SocialFactor']=person['SocialFactor'];\r\n          this.personTable[i]['IncrementFactor']=person['IncrementFactor'];\r\n          this.personTable[i]['Flag']=person['Flag'];\r\n        }\r\n      }\r\n      for (var i = 0; i < this.allocationTable.length; i++) {\r\n        if(this.allocationTable[i]['personId']==person['Id']){\r\n         this.allocationTable[i]['personName']= person['Name'];\r\n       }\r\n     }\r\n     this.refreshEndBalance();\r\n\r\n   }\r\n\r\n   deletePerson(person){\r\n    for (var i = 0; i < this.personTable.length; i++) {\r\n        \r\n             if(this.personTable[i]['Id']==person['Id'] && person['Flag'] =='D' && person['Id'].charAt(0) == 'T'){ //delete a person not exists in database\r\n              this.personTable.splice(i, 1);\r\n              i--;\r\n              for (var j = 0; j < this.allocationTable.length; j++) {\r\n                if(this.allocationTable[j]['personId']==person['Id']){\r\n                  this.allocationTable.splice(j, 1);\r\n                  j--;\r\n                }\r\n              }\r\n            }\r\n                else if (this.personTable[i]['Id']==person['Id'] && person['Flag'] =='D'){ //delete a person exists in the database\r\n                 this.deletedPersons.push(person['Id']);\r\n                 this.personTable.splice(i, 1);\r\n                 i--;\r\n                 for (var j = 0; j < this.allocationTable.length; j++) {\r\n                  if(this.allocationTable[j]['personId']==person['Id']){\r\n                   this.deletedAllocations.push(this.allocationTable[j]['Id']);\r\n                   this.allocationTable.splice(j, 1);\r\n                   j--;\r\n                 }\r\n               }\r\n             }   \r\n           }\r\n           this.refreshEndBalance();\r\n         }\r\n\r\n      // Project\r\n      insertProject(newProject){\r\n\r\n       if (newProject['Id'].charAt(0) == 'T' && newProject['Flag'] =='I' ){\r\n         this.projectTable.push(newProject);\r\n       }\r\n       //refresh remaining\r\n       this.refreshRemaining();\r\n       this.refreshEndBalance();\r\n     }\r\n     \r\n     updateProject(project){\r\n\r\n      for (var i = 0; i < this.projectTable.length; i++) {\r\n       if(this.projectTable[i]['Id']==project['Id'] && project['Flag'] =='U'){\r\n\r\n        console.log(this.projectTable[i]);\r\n        this.projectTable[i]['Name']=project['Name'];\r\n        this.projectTable[i]['EndDate']=project['EndDate'];\r\n        this.projectTable[i]['Stl']=project['Stl'];\r\n        this.projectTable[i]['ExternalOverhead']=project['ExternalOverhead'];\r\n        this.projectTable[i]['ExternalOtherCost']=project['ExternalOtherCost'];\r\n        this.projectTable[i]['InternalSalary']=project['InternalSalary'];\r\n        this.projectTable[i]['InternalOverhead']=project['InternalOverhead'];\r\n        this.projectTable[i]['InternalOtherCost']=project['InternalOtherCost'];\r\n        this.projectTable[i]['SpendingExternalSalary']=project['SpendingExternalSalary'];\r\n        this.projectTable[i]['SpendingExternalOverhead']=project['SpendingExternalOverhead'];\r\n        this.projectTable[i]['SpendingExternalOtherCost']=project['SpendingExternalOtherCost'];\r\n        this.projectTable[i]['SpendingInternalSalary']=project['SpendingInternalSalary'];\r\n        this.projectTable[i]['SpendingInternalOverhead']=project['SpendingInternalOverhead'];\r\n        this.projectTable[i]['SpendingInternalOtherCost']=project['SpendingInternalOtherCost'];\r\n        this.projectTable[i]['SpendingDate']=project['SpendingDate'];\r\n        this.projectTable[i]['OverheadConstant']=project['OverheadConstant'];\r\n        this.projectTable[i]['ExternalSalary']=project['ExternalSalary'];\r\n        this.projectTable[i]['Flag']=project['Flag'];\r\n      }\r\n    }\r\n    for (var i = 0; i < this.allocationTable.length; i++) {\r\n      if(this.allocationTable[i]['projectId']==project['Id']){\r\n        this.allocationTable[i]['projectName']= project['Name'];\r\n      }\r\n    }\r\n     //refresh remaining\r\n     this.refreshRemaining();\r\n     this.refreshEndBalance();\r\n\r\n   }\r\n\r\n   deleteProject(project){\r\n    for (var i = 0; i < this.projectTable.length; i++) {\r\n             if(this.projectTable[i]['Id']==project['Id'] && project['Flag'] =='D' && project['Id'].charAt(0) == 'T'){ //delete a person not exists in database\r\n              this.projectTable.splice(i, 1);\r\n              i--;\r\n              for (var j = 0; j < this.allocationTable.length; j++) {\r\n                if(this.allocationTable[j]['projectId']==project['Id']){\r\n                  this.allocationTable.splice(j, 1);\r\n                  j--;\r\n                }\r\n              }\r\n            }\r\n                else if (this.projectTable[i]['Id']==project['Id'] && project['Flag'] =='D'){ //delete a person exists in the database\r\n                 this.deletedProjects.push(project['Id']);\r\n                 this.projectTable.splice(i, 1);\r\n                 i--;\r\n                 for (var j = 0; j < this.allocationTable.length; j++) {\r\n                  if(this.allocationTable[j]['projectId']==project['Id']){\r\n                    this.deletedAllocations.push(this.allocationTable[j]['Id']);\r\n                    this.allocationTable.splice(j, 1);\r\n                    j--;\r\n                  }\r\n                }\r\n              }   \r\n            }\r\n             //refresh remaining\r\n             this.refreshRemaining();\r\n             this.refreshEndBalance();\r\n           }\r\n\r\n     // Allocation\r\n     insertAllocation(newAllocation){\r\n      if (newAllocation['Id'].charAt(0) == 'T' && newAllocation['Flag'] =='I' ){\r\n       this.allocationTable.push(newAllocation);\r\n     }\r\n     this.refreshEndBalance();\r\n\r\n   }\r\n\r\n   updateAllocation(allocation){\r\n\r\n\r\n     for (var i = 0; i < this.allocationTable.length; i++) {\r\n       if(this.allocationTable[i]['Id']==allocation['Id'] && allocation['Flag'] =='U'){\r\n        this.allocationTable[i]['Percentage']=allocation['Percentage'];\r\n        this.allocationTable[i]['StartDate']=allocation['StartDate'];\r\n        this.allocationTable[i]['EndDate']=allocation['EndDate'];\r\n        this.allocationTable[i]['Flag']=allocation['Flag'];\r\n      }\r\n    }\r\n    this.refreshEndBalance();\r\n\r\n  }\r\n\r\n  deleteAllocation(allocation){\r\n    for (var i = 0; i < this.allocationTable.length; i++) {\r\n             if(this.allocationTable[i]['Id']==allocation['Id'] && allocation['Flag'] =='D' && allocation['Id'].charAt(0) == 'T'){ //delete a person not exists in database\r\n              this.allocationTable.splice(i, 1);\r\n              i--;\r\n            }\r\n                else if (this.allocationTable[i]['Id']==allocation['Id'] && allocation['Flag'] =='D'){ //delete a person exists in the database\r\n                 this.deletedAllocations.push(allocation['Id']);\r\n                 this.allocationTable.splice(i, 1);\r\n                 i--;\r\n               }   \r\n             }\r\n             this.refreshEndBalance();\r\n           }\r\n\r\n           getAllocation(personId){\r\n            var allocations=[];\r\n            for (var i = 0; i < this.allocationTable.length; i++) {\r\n              if(this.allocationTable[i]['personId']==personId){\r\n               allocations.push(this.allocationTable[i]);\r\n             }\r\n           }\r\n           return allocations;        \r\n\r\n         }\r\n\r\n         refreshRemaining(){\r\n          this.remainingTable=[];\r\n          for (var i = 0; i < this.projectTable.length; i++) {\r\n\r\n            if(this.projectTable[i]['Flag'] != 'D'){\r\n              this.remainingTable.push({'Id':this.projectTable[i]['Id'],'Name':this.projectTable[i]['Name'], 'SpendingDate':this.projectTable[i]['SpendingDate'],\r\n                'ExternalSalary':this.projectTable[i]['ExternalSalary'] - this.projectTable[i]['SpendingExternalSalary'], 'ExternalOverhead':this.projectTable[i]['ExternalOverhead'] - this.projectTable[i]['SpendingExternalOverhead'], 'ExternalOtherCost':this.projectTable[i]['ExternalOtherCost'] - this.projectTable[i]['SpendingExternalOtherCost'], 'InternalSalary':this.projectTable[i]['InternalSalary'] - this.projectTable[i]['SpendingInternalSalary'] , 'InternalOverhead':this.projectTable[i]['InternalOverhead'] - this.projectTable[i]['SpendingInternalOverhead'],'InternalOtherCost':this.projectTable[i]['InternalOtherCost'] - this.projectTable[i]['SpendingInternalOtherCost']});\r\n            }\r\n          }\r\n\r\n        }\r\n\r\n        refreshEndBalance(){\r\n\r\n          this.endbalanceTable=[];\r\n          var joinSalaryCost = [];\r\n          //apply join\r\n          for (var i = 0; i < this.allocationTable.length; i++) {\r\n            var row={'all_projectId': '','pr_SpendingDate':'' , 'all_StartDate':'', 'all_EndDate':'' , 'all_Percentage':'', 'p_SocialFactor':'', 'p_Salary':''};\r\n            row['all_projectId']= this.allocationTable[i]['projectId'];\r\n            row['all_StartDate']= this.allocationTable[i]['StartDate'];\r\n            row['all_EndDate']= this.allocationTable[i]['EndDate'];\r\n            row['all_Percentage']= this.allocationTable[i]['Percentage'];\r\n            for (var j = 0; j < this.projectTable.length; j++) {\r\n              if(this.allocationTable[i]['projectId']==this.projectTable[j]['Id']){\r\n               row['pr_SpendingDate'] = this.projectTable[j]['SpendingDate'];\r\n               \r\n             }\r\n           }\r\n           for (var j = 0; j < this.personTable.length; j++) {\r\n            if(this.allocationTable[i]['personId']==this.personTable[j]['Id']){\r\n            row['p_SocialFactor'] = this.personTable[j]['SocialFactor'];\r\n            row['p_Salary'] = this.personTable[j]['Salary'];\r\n           \r\n          }\r\n          }\r\n          joinSalaryCost.push(row);\r\n        }\r\n           // apply calculations\r\n           var SalaryCost = [];\r\n           for (var i = 0; i < this.projectTable.length; i++) {\r\n            var row = {'projectId':'','Salary':''};\r\n            var sum=0;\r\n             for (var j = 0; j < joinSalaryCost.length; j++) {\r\n                if(joinSalaryCost[j]['all_projectId']==this.projectTable[i]['Id']){\r\n                  var date;\r\n                  if(joinSalaryCost[j]['pr_SpendingDate']==''){\r\n                     date= joinSalaryCost[j]['all_StartDate'];\r\n                  }\r\n                  else if(joinSalaryCost[j]['all_StartDate']>joinSalaryCost[j]['pr_SpendingDate']){\r\n                    date= joinSalaryCost[j]['all_StartDate'];\r\n\r\n                  }\r\n                  else{\r\n                    date= joinSalaryCost[j]['pr_SpendingDate'];\r\n\r\n                  }\r\n              \r\n                  sum= sum + (this.monthDiff(date,joinSalaryCost[j]['all_EndDate']) * '0.01' * parseFloat(joinSalaryCost[j]['all_Percentage']) * (1+parseFloat(joinSalaryCost[j]['p_SocialFactor'])) * parseFloat(joinSalaryCost[j]['p_Salary']));\r\n                  row['projectId']=this.projectTable[i]['Id'];\r\n                  row['Salary']=sum;\r\n\r\n                }\r\n             }\r\n             if(row['projectId']!=''){\r\n             \r\n             SalaryCost.push(row);\r\n\r\n           }\r\n           }\r\n              // apply join\r\n              var joinEndBalance = [];\r\n               for (var i = 0; i < SalaryCost.length; i++) {\r\n            var row={'pr_Id': '','pr_Name':'' , 'pr_ExternalSalary':'', 'pr_InternalSalary':'' , 'r_ExternalSalary':'', 'sc_Salary':'', 'r_InternalSalary':'', 'pr_ExternalOverhead':'', 'pr_InternalOverhead':'' , 'r_ExternalOverhead':'', 'r_InternalOverhead':'','pr_OverheadConstant':'','r_ExternalOtherCost,':'','r_InternalOtherCost':''};\r\n            row['sc_Salary']= SalaryCost[i]['Salary'];\r\n      \r\n            for (var j = 0; j < this.projectTable.length; j++) {\r\n              if(SalaryCost[i]['projectId']==this.projectTable[j]['Id']){\r\n               row['pr_Id'] = this.projectTable[j]['Id'];\r\n               row['pr_Name'] = this.projectTable[j]['Name'];\r\n               row['pr_ExternalSalary'] = this.projectTable[j]['ExternalSalary'];\r\n               row['pr_InternalSalary'] = this.projectTable[j]['InternalSalary'];\r\n               row['pr_ExternalOverhead'] = this.projectTable[j]['ExternalOverhead'];\r\n               row['pr_InternalOverhead'] = this.projectTable[j]['InternalOverhead'];\r\n               row['pr_OverheadConstant'] = this.projectTable[j]['OverheadConstant'];\r\n             \r\n             }\r\n           }\r\n           for (var j = 0; j < this.remainingTable.length; j++) {\r\n            if(SalaryCost[i]['projectId']==this.remainingTable[j]['Id']){\r\n            row['r_ExternalSalary'] = this.remainingTable[j]['ExternalSalary'];\r\n            row['r_InternalSalary'] = this.remainingTable[j]['InternalSalary'];\r\n            row['r_ExternalOverhead'] = this.remainingTable[j]['ExternalOverhead'];\r\n            row['r_InternalOverhead'] = this.remainingTable[j]['InternalOverhead'];\r\n            row['r_ExternalOtherCost'] = this.remainingTable[j]['ExternalOtherCost'];\r\n            row['r_InternalOtherCost'] = this.remainingTable[j]['InternalOtherCost'];\r\n\r\n          }\r\n          }\r\n          joinEndBalance.push(row);\r\n\r\n        }\r\n\r\n        // apply calculations\r\n        for (var i = 0; i < joinEndBalance.length; i++) {\r\n          var row= {'Id':'','Name':'','ExternalSalary':'','InternalSalary':'','ExternalOverhead':'','InternalOverhead':'','ExternalOtherCost':'','InternalOtherCost':''};\r\n          row['Id']=joinEndBalance[i]['pr_Id'];\r\n          row['Name']=joinEndBalance[i]['pr_Name'];\r\n          if(joinEndBalance[i]['pr_ExternalSalary']+joinEndBalance[i]['pr_InternalSalary'] != 0){\r\n            row['ExternalSalary'] = Math.round((parseFloat(joinEndBalance[i]['r_ExternalSalary'])-parseFloat(joinEndBalance[i]['pr_ExternalSalary'])/(parseFloat(joinEndBalance[i]['pr_ExternalSalary'])+parseFloat(joinEndBalance[i]['pr_InternalSalary']))*parseFloat(joinEndBalance[i]['sc_Salary'])) * 100) / 100;\r\n              \r\n            \r\n          }\r\n          else{\r\n            row['ExternalSalary'] =parseFloat(joinEndBalance[i]['r_ExternalSalary'])-parseFloat(joinEndBalance[i]['sc_Salary']);\r\n          }\r\n           if(joinEndBalance[i]['pr_ExternalSalary']+joinEndBalance[i]['pr_InternalSalary'] != 0){\r\n            row['InternalSalary'] = Math.round((parseFloat(joinEndBalance[i]['r_InternalSalary'])-parseFloat(joinEndBalance[i]['pr_InternalSalary'])/(parseFloat(joinEndBalance[i]['pr_ExternalSalary'])+parseFloat(joinEndBalance[i]['pr_InternalSalary']))*parseFloat(joinEndBalance[i]['sc_Salary'] ))* 100 )/ 100;\r\n\r\n\r\n          }\r\n          else{\r\n            row['InternalSalary'] =parseFloat(joinEndBalance[i]['r_InternalSalary'])-parseFloat(joinEndBalance[i]['sc_Salary']);\r\n          }\r\n           if(joinEndBalance[i]['pr_ExternalOverhead']+joinEndBalance[i]['pr_InternalOverhead'] != 0){\r\n            row['ExternalOverhead'] = Math.round((parseFloat(joinEndBalance[i]['r_ExternalOverhead'])-parseFloat(joinEndBalance[i]['pr_ExternalOverhead'])/(parseFloat(joinEndBalance[i]['pr_ExternalOverhead'])+parseFloat(joinEndBalance[i]['pr_ExternalOverhead']))*parseFloat(joinEndBalance[i]['sc_Salary'])) * 100) / 100;\r\n        \r\n          }\r\n          else{\r\n             row['ExternalOverhead'] =parseFloat(joinEndBalance[i]['r_ExternalOverhead'])-parseFloat(joinEndBalance[i]['pr_OverheadConstant'])*parseFloat(joinEndBalance[i]['sc_Salary']);\r\n          }\r\n           if(joinEndBalance[i]['pr_ExternalOverhead']+joinEndBalance[i]['pr_InternalOverhead'] != 0){\r\n            row['InternalOverhead'] = Math.round((parseFloat(joinEndBalance[i]['r_InternalOverhead'])-parseFloat(joinEndBalance[i]['pr_InternalOverhead'])/(parseFloat(joinEndBalance[i]['pr_ExternalOverhead'])+parseFloat(joinEndBalance[i]['pr_InternalOverhead']))*parseFloat(joinEndBalance[i]['sc_Salary'] ))* 100) / 100;\r\n                    }\r\n          else{\r\n            row['InternalOverhead'] =parseFloat(joinEndBalance[i]['r_InternalOverhead'])-parseFloat(joinEndBalance[i]['pr_OverheadConstant'])*parseFloat(joinEndBalance[i]['sc_Salary']);\r\n          }\r\n          row['ExternalOtherCost']=joinEndBalance[i]['r_ExternalOtherCost'];\r\n          row['InternalOtherCost']=joinEndBalance[i]['r_InternalOtherCost'];\r\n          this.endbalanceTable.push(row);\r\n\r\n        }\r\n\r\n        \r\n      }\r\n      monthDiff(d1, d2) {\r\n\r\nreturn new Date(d2).getMonth() - new Date(d1).getMonth() + (12 * (new Date(d2).getFullYear() - new Date(d1).getFullYear()));\r\n}\r\n\r\n\r\n\r\n      saveAll(){\r\n          //Deletion first (Allocation, person , project)\r\n          for (var i = 0; i < this.deletedAllocations.length; i++) {\r\n            this.allocationClass.deleteAllocation(this.deletedAllocations[i]);\r\n\r\n          }\r\n          for (var i = 0; i < this.deletedPersons.length; i++) {\r\n            this.personClass.deletePerson(this.deletedPersons[i]);\r\n          }\r\n          for (var i = 0; i < this.deletedProjects.length; i++) {\r\n            this.projectClass.deleteProject(this.deletedProjects[i]);\r\n          }\r\n\r\n\r\n          //Insert and Update (Person)\r\n          for (var i = 0; i < this.personTable.length; i++) {\r\n           if(this.personTable[i]['Flag']=='I'){\r\n             console.log(this.personTable[i]);\r\n            var insertedId= this.personClass.insertPerson(this.personTable[i]['Name'], this.personTable[i]['Salary'], this.personTable[i]['SocialFactor'], this.personTable[i]['IncrementFactor']);\r\n            //update allocation temprory Ids\r\n            console.log(insertedId);\r\n            for (var j = 0; j < this.allocationTable.length; j++) {\r\n              if(this.allocationTable[j]['personId']==this.personTable[i]['Id']){\r\n                this.allocationTable[j]['personId'] = insertedId;\r\n\r\n              }\r\n            }\r\n\r\n          }\r\n          else if(this.personTable[i]['Flag']=='U' && this.personTable[i]['Id'].charAt(0) == 'T'){\r\n           this.personClass.insertPerson(this.personTable[i]['Name'], this.personTable[i]['Salary'], this.personTable[i]['SocialFactor'], this.personTable[i]['IncrementFactor']);\r\n         }\r\n         else if(this.personTable[i]['Flag']=='U'){\r\n           this.personClass.updatePerson(this.personTable[i]['Id'],this.personTable[i]['Name'], this.personTable[i]['Salary'], this.personTable[i]['SocialFactor'], this.personTable[i]['IncrementFactor']);\r\n         }\r\n\r\n\r\n       }\r\n\r\n        //Insert and Update(Project)\r\n        for (var i = 0; i < this.projectTable.length; i++) {\r\n          if(this.projectTable[i]['Flag']=='I'){\r\n\r\n            var insertedId= this.projectClass.insertProject(this.projectTable[i]['Name'],\r\n              this.projectTable[i]['EndDate'],\r\n              this.projectTable[i]['Stl'],\r\n              this.projectTable[i]['ExternalSalary'],\r\n              this.projectTable[i]['ExternalOverhead'],\r\n              this.projectTable[i]['ExternalOtherCost'],\r\n              this.projectTable[i]['InternalSalary'],\r\n              this.projectTable[i]['InternalOverhead'],\r\n              this.projectTable[i]['InternalOtherCost'],\r\n              this.projectTable[i]['SpendingExternalSalary'],\r\n              this.projectTable[i]['SpendingExternalOverhead'],\r\n              this.projectTable[i]['SpendingExternalOtherCost'],\r\n              this.projectTable[i]['SpendingInternalSalary'],\r\n              this.projectTable[i]['SpendingInternalOverhead'],\r\n              this.projectTable[i]['SpendingInternalOtherCost'],\r\n              this.projectTable[i]['SpendingDate'],\r\n              this.projectTable[i]['OverheadConstant']\r\n              );\r\n            alert(insertedId);\r\n            //update allocation temprory Ids\r\n            for (var j = 0; j < this.allocationTable.length; j++) {\r\n              if(this.allocationTable[j]['projectId']==this.projectTable[i]['Id']){\r\n                this.allocationTable[j]['projectId'] = insertedId;\r\n\r\n              }\r\n            }\r\n\r\n          }\r\n          else if(this.projectTable[i]['Flag']=='U' && this.projectTable[i]['Id'].charAt(0) == 'T'){\r\n           this.projectClass.insertProject(this.projectTable[i]['Name'],\r\n            this.projectTable[i]['EndDate'],\r\n            this.projectTable[i]['Stl'],\r\n            this.projectTable[i]['ExternalSalary'],\r\n            this.projectTable[i]['ExternalOverhead'],\r\n            this.projectTable[i]['ExternalOtherCost'],\r\n            this.projectTable[i]['InternalSalary'],\r\n            this.projectTable[i]['InternalOverhead'],\r\n            this.projectTable[i]['InternalOtherCost'],\r\n            this.projectTable[i]['SpendingExternalSalary'],\r\n            this.projectTable[i]['SpendingExternalOverhead'],\r\n            this.projectTable[i]['SpendingExternalOtherCost'],\r\n            this.projectTable[i]['SpendingInternalSalary'],\r\n            this.projectTable[i]['SpendingInternalOverhead'],\r\n            this.projectTable[i]['SpendingInternalOtherCost'],\r\n            this.projectTable[i]['SpendingDate'],\r\n            this.projectTable[i]['OverheadConstant']);\r\n         }\r\n         else if(this.projectTable[i]['Flag']=='U'){\r\n           this.projectClass.updateProject(this.projectTable[i]['Id'],\r\n            this.projectTable[i]['Name'],\r\n            this.projectTable[i]['EndDate'],\r\n            this.projectTable[i]['Stl'],\r\n            this.projectTable[i]['ExternalSalary'],\r\n            this.projectTable[i]['ExternalOverhead'],\r\n            this.projectTable[i]['ExternalOtherCost'],\r\n            this.projectTable[i]['InternalSalary'],\r\n            this.projectTable[i]['InternalOverhead'],\r\n            this.projectTable[i]['InternalOtherCost'],\r\n            this.projectTable[i]['SpendingExternalSalary'],\r\n            this.projectTable[i]['SpendingExternalOverhead'],\r\n            this.projectTable[i]['SpendingExternalOtherCost'],\r\n            this.projectTable[i]['SpendingInternalSalary'],\r\n            this.projectTable[i]['SpendingInternalOverhead'],\r\n            this.projectTable[i]['SpendingInternalOtherCost'],\r\n            this.projectTable[i]['SpendingDate'],\r\n            this.projectTable[i]['OverheadConstant']);\r\n         }\r\n\r\n\r\n       }\r\n\r\n          //Insert and Update (Allocation)\r\n          for (var i = 0; i < this.allocationTable.length; i++) {\r\n            console.log(this.allocationTable[i]);\r\n           if(this.allocationTable[i]['Flag']=='I'){\r\n\r\n            this.allocationClass.insertAllocation(this.allocationTable[i]['personId'], this.allocationTable[i]['projectId'], this.allocationTable[i]['Percentage'], \r\n             this.allocationTable[i]['StartDate'], this.allocationTable[i]['EndDate']);\r\n\r\n          }\r\n          else if(this.allocationTable[i]['Flag']=='U' && this.allocationTable[i]['Id'].charAt(0) == 'T'){\r\n            this.allocationClass.insertAllocation(this.allocationTable[i]['personId'], this.allocationTable[i]['projectId'], this.allocationTable[i]['Percentage'], \r\n              this.allocationTable[i]['StartDate'], this.allocationTable[i]['EndDate']);\r\n          }\r\n          else if(this.allocationTable[i]['Flag']=='U'){\r\n            this.allocationClass.updateAllocation(this.allocationTable[i]['Id'],this.allocationTable[i]['Percentage'], this.allocationTable[i]['StartDate'], \r\n             this.allocationTable[i]['EndDate']);          \r\n\r\n          }\r\n\r\n\r\n        }\r\n        window.location.reload();\r\n      }\r\n\r\n}\r\n\r\nconst instance = new PHPController();\r\nexport default PHPController;","import React from 'react';\r\nimport { Navbar, NavbarBrand, NavbarNav, NavItem, NavLink, NavbarToggler, Collapse, FormInline, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from \"mdbreact\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport PHPController from \"./PHPController\";\r\n\r\nclass NavigationBar extends React.Component {\r\n  state = {\r\n    isOpen: false\r\n  };\r\n\r\n  toggleCollapse = this.setState({ isOpen: !this.state.isOpen });\r\n\r\n\r\n  render() {\r\n    return (\r\n\r\n      <Navbar className=\"navbar\" dark expand=\"md\" >\r\n        <NavbarBrand>\r\n          <strong className=\"navbarTitle\">PROGNOSTIC /</strong>\r\n        </NavbarBrand>\r\n        <NavbarToggler\r\n          onClick={this.toggleCollapse}\r\n        />\r\n        <Collapse\r\n          id=\"navbarCollapse3\"\r\n          isOpen={this.state.isOpen}\r\n          navbar\r\n        >\r\n          <NavbarNav left>\r\n            <NavItem>\r\n              <NavLink to=\"/personTable\">People</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink to=\"/projectTable\">Projects</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink to=\"/allocationTable\">Allocation</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink to=\"/spendingTable\">Spending</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink to=\"/remaningTable\">Remaning</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink to=\"/endBalanceTable\">End Balance</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink to=\"/project/pdf/pdf.php\">Save File</NavLink>\r\n            </NavItem>\r\n          </NavbarNav>\r\n          <NavItem\r\n           onClick={() => (new PHPController()).saveAll()}\r\n           className=\"navbarSave\"\r\n            >\r\n            SAVE CHANGES /\r\n          </NavItem>\r\n        </Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n/* Need to type this after creating a component so other files can import it */\r\n\r\nexport default NavigationBar;\r\n","import React, { Component } from \"react\";\r\nimport vis from \"vis\";\r\nimport PHPController from \"../../PHPController\";\r\nimport \"../../../../node_modules/vis/dist/vis-timeline-graph2d.min.css\";\r\n\r\nconst ID_GROUP_TOTAL = -1;\r\nconst DEFAULT_EMP_RATE = \"100\";\r\n\r\nclass AllocationView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n\r\n    this.items = new vis.DataSet({});\r\n    this.groups = new vis.DataSet({});\r\n    this.total = [];\r\n    this.PHPController = new PHPController();\r\n    this.timeline = null;\r\n    this.showEmptyGroups = true;\r\n    this.init = true;\r\n    this.toggleRef = React.createRef();\r\n\r\n    this.preInit();\r\n  }\r\n\r\n  /* fired before the timeline is created */\r\n  preInit() {\r\n    this.createGroups();\r\n  }\r\n\r\n  /* fired after the timeline is created */\r\n  postInit() {\r\n    this.createTotalTimeline();\r\n    this.attachEvents();\r\n  }\r\n  \r\n  /* When react mounts the component, attatch the timeline to the div with id=timeline created in render() */\r\n  componentDidMount() {\r\n    let container = document.getElementById(\"timeline\");\r\n    this.timeline = new vis.Timeline(\r\n      container,\r\n      this.items,\r\n      this.groups,\r\n      this.options\r\n    );\r\n\r\n    this.postInit();\r\n  }\r\n\r\n\r\n  /* Options and events for the timeline, events are delageted to class methods  */\r\n  options = {\r\n    width: \"100%\",\r\n    start: new Date(),\r\n    end: new Date(),\r\n    groupOrder: \"id\",\r\n    orientation: {\r\n      axis: \"bottom\",\r\n      item: \"bottom\"\r\n    },\r\n    editable: {\r\n      add: true,\r\n      remove: true,\r\n      updateGroup: false,\r\n      updateTime: true\r\n    },\r\n    zoomMax: 1000 * 60 * 60 * 24 * 24 *365,\r\n    zoomMin: 1000 * 60 * 60 * 24 * 24,\r\n    align: \"center\",\r\n    stack: false,\r\n    type: \"range\",\r\n\r\n    onAdd: (item, callback) => {\r\n      this.onAdd(item, callback);\r\n    },\r\n    onRemove: (item, callback) => {\r\n      this.onRemove(item, callback);\r\n    },\r\n    onMoving: (item, callback) => {\r\n      this.onMoving(item, callback);\r\n    },\r\n    onMove: (item, callback) => {\r\n      this.onMove(item, callback);\r\n    },\r\n    onInitialDrawComplete: () => {\r\n      this.onInitialDrawComplete();\r\n    },\r\n    onUpdate: (item, callback) => {\r\n      this.onUpdate(item, callback);\r\n    }\r\n  };\r\n\r\n  /**************************  ALLOCATION EVENTS  **************************\r\n   *                                                                        *\r\n   *   If the changes are accepted, you must call: callback(item) to        *\r\n   *   update the this.items dataset, to discard the changes, call          *\r\n   *   callback(null).                                                      *\r\n   *                                                                        *\r\n   **************************************************************************/\r\n\r\n  /* Fired when an item is added to the timeline */\r\n  onAdd(item, callback) {\r\n    if (item.group == undefined || item.group == ID_GROUP_TOTAL || this.props.personId == null) {\r\n      callback(null);\r\n      return;\r\n    }\r\n\r\n    let start = this.convertDateToYYYYMMDD(item.start);\r\n    let end = this.convertDateToYYYYMMDD(item.end);\r\n\r\n    let newAlloc = {\r\n      Id: \"T\" + item.id,\r\n      personId: this.props.personId,\r\n      projectId: item.group,   \r\n      Percentage: DEFAULT_EMP_RATE,\r\n      StartDate: start,\r\n      EndDate: end,\r\n      Flag: \"I\",\r\n    }\r\n\r\n    item.id = \"T\" + item.id;\r\n    item.content = DEFAULT_EMP_RATE;\r\n\r\n   this.PHPController.insertAllocation(newAlloc);\r\n   this.alertProjectEndExceeded(item);\r\n   callback(item);\r\n   this.createTotalTimeline();\r\n  }\r\n\r\n  onRemove(item, callback) {\r\n\r\n    let removeAlloc = {Id: item.id, Flag: \"D\"};\r\n    this.PHPController.deleteAllocation(removeAlloc);\r\n    callback(item);\r\n    this.createTotalTimeline();\r\n  }\r\n\r\n  /* Fired continuously when an allocation is dragged.\r\n     Is used to check if the allocations end date exceeds the project, \r\n     and if, display a warning.\r\n  */\r\n  onMoving(item, callback) {\r\n    this.alertProjectEndExceeded(item);\r\n    callback(item);\r\n  }\r\n\r\n  /* Fired when double clicking an allocation. */\r\n  onUpdate(item, callback) {\r\n    if (item.group == ID_GROUP_TOTAL) {\r\n      callback(null);\r\n      return;\r\n    }\r\n\r\n    let value = prompt(\"Input employment rate:\", item.content);\r\n\r\n    if (value != null) {\r\n      value = value.trim();\r\n    }\r\n\r\n    if (value == \"\" || value < 0 || value > 200) {\r\n      callback(null);\r\n      return;\r\n    }\r\n\r\n    if (Math.floor(value) == value) {\r\n      item.content = value;\r\n      let start = this.convertDateToYYYYMMDD(item.start);\r\n      let end = this.convertDateToYYYYMMDD(item.end);\r\n      let updateAlloc = {Id: item.id, Flag: \"U\", StartDate: start, EndDate: end, Percentage: item.content};\r\n      this.PHPController.updateAllocation(updateAlloc);\r\n\r\n      callback(item);\r\n      this.createTotalTimeline();\r\n    } else {\r\n      callback(null);\r\n    }\r\n\r\n  }\r\n\r\n  /* Fired when an item has been moved or dragged\r\n   */\r\n  onMove(item, callback) {\r\n    if (item.start >= item.end) {\r\n      callback(null);\r\n      return;\r\n    }\r\n    let start = this.convertDateToYYYYMMDD(item.start);\r\n    let end = this.convertDateToYYYYMMDD(item.end);\r\n    let updateAlloc = {Id: item.id, Flag: \"U\", StartDate: start, EndDate: end, Percentage: item.content};\r\n    this.PHPController.updateAllocation(updateAlloc);\r\n    callback(item);\r\n    this.createTotalTimeline();\r\n  }\r\n\r\n  /* Fired when the timeline has been drawn, is used to set\r\n     the timeline window so it displays the current month nicley\r\n  */\r\n  onInitialDrawComplete() {\r\n    var date = new Date();\r\n    var year = date.getFullYear();\r\n    var month = date.getMonth();\r\n    var nextMonth = month == 11 ? 0 : month + 1;\r\n    var nextYear = month == 11 ? year + 1 : year;\r\n    var day = 1;\r\n\r\n    this.timeline.setWindow(\r\n      new Date(year, month, day),\r\n      new Date(nextYear, nextMonth, day),\r\n      { animation: false }\r\n    );\r\n  }\r\n\r\n  /***********************************************************\r\n   *                        END EVENTS                        *\r\n   ***********************************************************/\r\n\r\n\r\n\r\n /* helper function to convert javascript date objects to a YYYY-MM-DD string */\r\n  convertDateToYYYYMMDD(date) {\r\n    let year = date.getFullYear();\r\n    let month = date.getMonth() + 1;\r\n    let day = date.getDate();\r\n\r\n    if(month < 10) {\r\n      month = \"0\" + month;\r\n    }\r\n    if(day < 10) {\r\n      day = \"0\" + day;\r\n    }\r\n\r\n    return year + \"-\" + month + \"-\" + day;\r\n  }\r\n\r\n\r\n  /* helper function to display visual warning if the allocation exceed a projects end date */\r\n  alertProjectEndExceeded(item) {\r\n      item.style = item.end > this.groups.get(item.group).end ? \"background: rgba(175, 0, 0, 1);\" : \"\";\r\n  }\r\n\r\n\r\n\r\n  /* Attatching events to the vis-dataset and vis-timeline that are not covered by the events in the options object */\r\n  attachEvents() {\r\n\r\n    /*event for splitting the allocation */\r\n    this.timeline.on('contextmenu', props => {\r\n      props.event.preventDefault();\r\n      if (props.item != null && props.group != ID_GROUP_TOTAL) {\r\n        let properties = this.timeline.getEventProperties(props.event);\r\n        this.splitAllocation(props.item, properties.snappedTime._d);\r\n      }\r\n    }); \r\n\r\n    /* event to update the total timeline when an allocation have been moved */\r\n    this.timeline.on('rangechanged', (event, props, args) => {\r\n      this.updateTotalTimeline();\r\n    });\r\n\r\n    /* this is sort of a hack-event to realize the total timeline, the HTML-DOM object for the allocations is created by the vis-timeline,\r\n       therefore we need to get that HTML-DOM object after its created and change its height, cant give ID's either to the timeline objects, \r\n       however we can give them class names, so we provide unique class names in another method and then target that dom element in this callback\r\n       method. */\r\n    this.items.on(\"add\", (event, props, args) => {\r\n      if (args != null && args.total) {\r\n        let heigth = args.rate > 175 ? 175 : args.rate;  \r\n        let ele = document.getElementsByClassName(args.id)[0];\r\n        if (ele != undefined) {\r\n          ele.style.height = heigth + \"px\";\r\n          this.timeline.redraw();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  splitAllocation(allocId, splitDate) {\r\n    let alloc = this.items.get(allocId);\r\n    let startDate = alloc.start;\r\n    let endDate = alloc.end;\r\n    let empRate = alloc.content;\r\n    let group = alloc.group;\r\n    let id = alloc.id;\r\n\r\n    if (splitDate >= endDate || splitDate <= startDate) {\r\n      return;\r\n    }\r\n\r\n    this.PHPController.deleteAllocation({Id: alloc.id, Flag: \"D\"});\r\n    this.items.remove(alloc.id); \r\n\r\n    let id1 = \"T\" + id + \"1\";\r\n    let id2 = \"T\" + id + \"2\";\r\n\r\n    let newItem1 = { id: id1, content: empRate, start: startDate, end: splitDate, group: group }\r\n    let newItem2 = { id: id2, content: empRate, start: splitDate, end: endDate, group: group }\r\n\r\n    let newAlloc1 = {\r\n      Id: id1,\r\n      personId: this.props.personId,\r\n      projectId: group,   \r\n      Percentage: empRate,\r\n      StartDate: startDate,\r\n      EndDate: splitDate,\r\n      Flag: \"I\",\r\n    }\r\n\r\n    let newAlloc2 = {\r\n      Id: id2,\r\n      personId: this.props.personId,\r\n      projectId: group,   \r\n      Percentage: empRate,\r\n      StartDate: splitDate,\r\n      EndDate: endDate,\r\n      Flag: \"I\",\r\n    }\r\n\r\n    this.PHPController.insertAllocation(newAlloc1);\r\n    this.PHPController.insertAllocation(newAlloc2);\r\n\r\n    this.alertProjectEndExceeded(newItem1);\r\n    this.alertProjectEndExceeded(newItem2);\r\n    this.items.add(newItem1);\r\n    this.items.add(newItem2);\r\n  }\r\n\r\n\r\n  addAllocation(alloc) {\r\n    let newAlloc = {\r\n      id: alloc.Id,\r\n      content: alloc.Percentage,\r\n      start: new Date(alloc.StartDate),\r\n      end: new Date(alloc.EndDate),\r\n      group: alloc.projectId\r\n    }\r\n\r\n    this.alertProjectEndExceeded(newAlloc);\r\n    this.items.add(newAlloc);\r\n  }\r\n\r\n  setTimelineHeight(rows, init) {\r\n    let heigth = rows * 50 + 70 + 150;\r\n    init ? this.options.height = heigth : this.timeline.setOptions({ height: heigth });\r\n  }\r\n\r\n\r\n  /* lightweight version of the createTotalTimeline() method, used when an alloc have been moved or updated */\r\n  updateTotalTimeline() {\r\n    console.log(\"updateTotalTimeline()\");\r\n    this.items.remove(this.items.get({ filter: function (item) { return item.group == ID_GROUP_TOTAL } }));\r\n    this._createTotalTimeline();\r\n  }\r\n\r\n  /* creates the total timeline based on the allocations in the timeline */\r\n  createTotalTimeline() {\r\n    console.log(\"createTotalTimeline()\");\r\n    this.items.remove(this.items.get({ filter: function (item) { return item.group == ID_GROUP_TOTAL } }));\r\n\r\n    let totalSet = new vis.DataSet({});\r\n    let allocations = this.items.get();\r\n    let length = allocations.length;\r\n    this.total = [];\r\n\r\n    if (length < 1) {\r\n      return;\r\n    }\r\n\r\n    for (var i = 0; i < length; i++) {\r\n      totalSet.add({\r\n        date: allocations[i].start\r\n      });\r\n      totalSet.add({\r\n        date: allocations[i].end\r\n      });\r\n    }\r\n\r\n    let sortedDates = totalSet.get({ fields: ['date'], order: \"date\", type: { date: 'Date' } });\r\n    var intersections = [];\r\n    var currentDate = sortedDates[0];\r\n\r\n    /* extract the intersections */\r\n    for (var i = 0; i < sortedDates.length; i++) {\r\n      if (currentDate.date < sortedDates[i].date) {\r\n        intersections.push({ 'start': currentDate.date, 'end': sortedDates[i].date });\r\n        currentDate = sortedDates[i];\r\n      }\r\n    }\r\n\r\n    /* calculate contents */\r\n    var sum;\r\n    for (var j = 0; j < intersections.length; j++) {\r\n      sum = 0;\r\n      for (var i = 0; i < allocations.length; i++) {\r\n        if (allocations[i]['start'] <= intersections[j]['start'] && allocations[i]['end'] >= intersections[j]['end']) {\r\n          sum = sum + parseInt(allocations[i]['content']);\r\n        }\r\n      }\r\n\r\n      if (sum > 0) {\r\n        this.total.push({ start: intersections[j]['start'], end: intersections[j]['end'], rate: sum, tag: j })\r\n      }\r\n\r\n    }\r\n    this._createTotalTimeline();\r\n  }\r\n\r\n\r\n\r\n  /* helper function that add the items to the total timeline */\r\n  _createTotalTimeline() {\r\n    let length = this.total.length;\r\n\r\n    for (var i = 0; i < length; i++) {\r\n\r\n      let id = \"totalItem-\" + this.total[i].tag;\r\n      let rate = this.total[i].rate;\r\n      let color = this.getColor(rate);\r\n\r\n      /* the total item */\r\n      let newAlloc = {\r\n        content: \"\",\r\n        start: this.total[i].start,\r\n        end: this.total[i].end,\r\n        group: ID_GROUP_TOTAL,\r\n        className: id,\r\n        editable: false,\r\n        style: color\r\n      }\r\n\r\n      /* need to get the HTML-DOM element so i can change the height, can't reach it becuase vis-js \r\n      is creating it internally, need to add an unique class (cant add ids) so i can grab the HTML-DOM\r\n      element in a callback method from vis-js and then change the hight */\r\n      let args = { id: id, rate: rate, total: true };\r\n      this.items.add(newAlloc, args);\r\n    }\r\n  }\r\n\r\n\r\n  /* helper function for creating total timeline items, gets an color depending on the employmeent rate */\r\n  getColor(rate) {\r\n    if (rate <= 25) return \"background: #00b855\";\r\n    if (rate <= 50) return \"background: #00e56b\";\r\n    if (rate <= 75) return \"background: #00ff77\";\r\n    if (rate <= 100) return \"background: #38ff94\";\r\n    if (rate <= 125) return \"background: #fdcb6e\";\r\n    if (rate <= 150) return \"background: #ff6666\";\r\n    \r\n    return \"background: #d63031\";\r\n  }\r\n\r\n  /* retrives all allocations for one specific  person */\r\n  getAllocations(personId) {\r\n    if (personId == null) {\r\n      return;\r\n    }\r\n\r\n    this.items.clear();\r\n    let allocations = this.PHPController.getAllocation(personId);\r\n    allocations.forEach(item => this.addAllocation(item));\r\n  }\r\n\r\n  /* creates the timeline groups based on the existing projects */\r\n  createGroups() {\r\n    let projects = this.PHPController.getProjects();\r\n    this.groups.add({ id: ID_GROUP_TOTAL, content: \"\", className: \"pg-totalTimeline\" });\r\n\r\n    /* the project id becomes the group id */\r\n    for (var i = 0; i < projects.length; i++) {\r\n      this.groups.add({\r\n        id: projects[i].Id,\r\n        content: projects[i].Name,\r\n        end: new Date(projects[i].EndDate),\r\n        visible: true\r\n      });\r\n    }   \r\n  }\r\n\r\n  /* toggle between hide/show of all groups with no allocations */\r\n  toggleGroups = () => {\r\n    this.showEmptyGroups = !this.showEmptyGroups;\r\n    this.toggleRef.current.innerHTML = this._getToggleText();\r\n    this.updateTimelineGroups();\r\n  };\r\n\r\n  /* Update the timeline when first rendered and when switching people */\r\n  updateTimelineGroups() {\r\n    let notEmptyGroups = this.items.distinct(\"group\");\r\n    let allGroups = this.groups.getIds();\r\n    let difference = allGroups.filter(\r\n      x => !(notEmptyGroups.indexOf(x) > -1) && x != ID_GROUP_TOTAL\r\n    );\r\n\r\n    /* setting all groups to visible before toggling (needed when switching people) */\r\n    this._showAllGroups();\r\n    for (var i = 0; i < difference.length; i++) {\r\n      this.groups.update({ id: difference[i], visible: this.showEmptyGroups });\r\n    }\r\n\r\n    let height = this.showEmptyGroups ? allGroups.length : allGroups.length - difference.length;\r\n\r\n    let iSTimelineInitialized = this.timeline? true : false;\r\n\r\n    if(iSTimelineInitialized) {\r\n      console.log(\"Timeline Initialized\");\r\n      this.setTimelineHeight(height, false); \r\n      this.timeline.redraw();\r\n    }\r\n\r\n  } \r\n\r\n  _showAllGroups() {\r\n    let allGroups = this.groups.getIds();\r\n    for (var i = 0; i < this.groups.length; i++) {\r\n      this.groups.update({ id: allGroups[i], visible: true });\r\n    }\r\n  }\r\n\r\n  _getToggleText() {\r\n    let str = this.showEmptyGroups? \"COLLAPASE\" : \"EXPAND\";\r\n    return str;\r\n  }\r\n\r\n  render() {\r\n    console.log(\"RENDER: AllocationView.jsx\");\r\n  \r\n    this.getAllocations(this.props.personId);\r\n    this.createTotalTimeline();\r\n    this.updateTimelineGroups();\r\n\r\n    let str = this._getToggleText();\r\n\r\n    return (\r\n      <div className=\"prog-av\">\r\n        <div className=\"prog-av-user\">{this.props.personName}</div>\r\n        <button className=\"togglebtn\" onClick={this.toggleGroups} ref={this.toggleRef}>{str}</button>\r\n        <div className=\"prog-av-container\">\r\n          <div id=\"timeline\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AllocationView;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            searchString: \"\",\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refs.search.focus();\r\n    }\r\n\r\n    handleChange = () => {\r\n        this.setState({ searchString: this.refs.search.value });\r\n    }\r\n\r\n    render() {\r\n        console.log(\"RENDER: Search.jsx\");\r\n        let _users = this.props.persons;\r\n        let search = this.state.searchString.trim().toLowerCase();\r\n\r\n        if (search.length > 0) {\r\n            _users = _users.filter(function (user) {\r\n                return user.Name.toLowerCase().match(search);\r\n            });\r\n        }\r\n\r\n        return (\r\n            <div className=\"pg-search\">\r\n                <h2>SEARCH STAFFING</h2>\r\n\r\n                <div>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={this.state.searchString}\r\n                        ref=\"search\"\r\n                        onChange={this.handleChange}\r\n                        placeholder=\"Type name here\"\r\n                    />\r\n                    <ul className=\"pg-search-list\">\r\n                        {_users.map(l => {\r\n                            return (\r\n                                <li\r\n                                    className=\"pg-search-list\"\r\n                                    onClick={() => this.props.updateAllocationView(l.Id, l.Name)}\r\n                                >\r\n                                    {l.Name} <a href=\"#\">{l.email}</a>\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from \"react\";\r\nimport AllocationView from \"./allocation_view/allocationView\";\r\nimport Search from \"./persons_list/search\";\r\nimport \"./allocationTab.css\"\r\nimport PHPController from \"../PHPController\";\r\n\r\n\r\nclass AllocationTab extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.PHPController = new PHPController();\r\n\r\n    this.state = {\r\n      selectedId: null,\r\n      selectedName: \"\",\r\n      persons: []\r\n    }\r\n    \r\n  }\r\n\r\n  componentDidMount() {\r\n    let persons = this.PHPController.getPersons();\r\n    this.setState({ persons: persons });\r\n  }\r\n\r\n  updateAllocationView = (id, name) => {\r\n    this.setState({ selectedId: id,  selectedName: name})\r\n  }\r\n\r\n  render() {\r\n    console.log(\"RENDER: AllocationTab.jsx\");\r\n\r\n    return (\r\n      <div className=\"prog-at\">\r\n        <Search\r\n          updateAllocationView={this.updateAllocationView}\r\n          persons={this.state.persons}\r\n        />\r\n        <AllocationView \r\n        personId={this.state.selectedId}\r\n        personName={this.state.selectedName} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AllocationTab;\r\n","import React, { Component } from \"react\";\r\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\r\nimport \"react-bootstrap-table/dist/react-bootstrap-table-all.min.css\";\r\nimport PHPController from \"./PHPController\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nclass personTab extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.PHPController = new PHPController();\r\n    this.state = {\r\n      persons: [],\r\n      hidden: true\r\n    };\r\n    this.options = {\r\n      defaultSortName: \"Name\",\r\n      defaultSortOrder: \"desc\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let persons = this.PHPController.getPersons();\r\n    this.setState({ persons: persons });\r\n  }\r\n\r\n  createCustomInsertButton = openModal => {\r\n    return (\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-dark m-1\"\r\n        onClick={openModal}\r\n        style={{\r\n          paddingLeft: 15,\r\n          paddingRight: 15,\r\n          paddingTop: 8,\r\n          paddingBottom: 8\r\n        }}\r\n      >\r\n        Add\r\n      </button>\r\n    );\r\n  };\r\n\r\n  createCustomDeleteButton = onBtnClick => {\r\n    return (\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-dark m-1\"\r\n        onClick={onBtnClick}\r\n        style={{\r\n          paddingLeft: 15,\r\n          paddingRight: 15,\r\n          paddingTop: 8,\r\n          paddingBottom: 8\r\n        }}\r\n      >\r\n        Delete\r\n      </button>\r\n    );\r\n  };\r\n\r\n  onAddRow = (row, colInfo, errorCallback) => {\r\n    if (row.Name == \"\") return \"Please enter a name.\";\r\n    if (row.Salary == \"\") return \"Please enter a salary.\";\r\n    if (isNaN(row.Salary)) return \"Salary must be a number.\";\r\n    if (row.Salary < 0) return \"Salary must be positive.\";\r\n    if (row.SocialFactor == \"\") return \"Please enter a social factor.\";\r\n    if (isNaN(row.SocialFactor)) return \"Social factor must be a number.\";\r\n    if (row.SocialFactor < 0 || row.SocialFactor > 9.99)\r\n      return \"Social Factor must be in the range of 0 - 9.99.\";\r\n    if (row.IncrementFactor == \"\") return \"Please enter an increment factor.\";\r\n    if (isNaN(row.IncrementFactor)) return \"Increment factor must be a number.\";\r\n    if (row.IncrementFactor < 0 || row.IncrementFactor > 9.99)\r\n      return \"Increment Factor must be in the range of 0 - 9.99.\";\r\n\r\n    errorCallback();\r\n  };\r\n\r\n  onAfterInsertRow(row) {\r\n    row.Id = \"T\" + row.Id;\r\n    this.PHPController = new PHPController();\r\n    let newPerson = {\r\n      Id: row[\"Id\"],\r\n      Name: row[\"Name\"],\r\n      Salary: row[\"Salary\"],\r\n      SocialFactor: row[\"SocialFactor\"],\r\n      IncrementFactor: row[\"IncrementFactor\"],\r\n      Flag: \"I\"\r\n    };\r\n    this.PHPController.insertPerson(newPerson);\r\n  }\r\n\r\n  onAfterDeleteRow(rowKeys, rows) {\r\n    console.log(rowKeys);\r\n    console.log(rows);\r\n    let PHP = new PHPController();\r\n    for (let i = 0; i < rows.length; i++) {\r\n      let id = rowKeys[i];\r\n      id = rowKeys[i];\r\n\r\n      let removePerson = {\r\n        Id: id,\r\n        Flag: \"D\"\r\n      };\r\n      PHP.deletePerson(removePerson);\r\n    }\r\n  }\r\n\r\n  onBeforeSaveCell(row, cellName, cellValue) {\r\n    if (cellValue == \"\") {\r\n      toast.error(({ closeToast }) => <div>The field can not be empty.</div>);\r\n      return false;\r\n    }\r\n    if (\r\n      cellName == \"Salary\" ||\r\n      cellName == \"SocialFactor\" ||\r\n      cellName == \"IncrementFactor\"\r\n    ) {\r\n      if (isNaN(cellValue)) {\r\n        toast.error(({ closeToast }) => <div>The value must be a number.</div>);\r\n        return false;\r\n      }\r\n    }\r\n    if (cellName == \"Salary\") {\r\n      if (cellValue < 0) {\r\n        toast.error(({ closeToast }) => <div>The value must be positive.</div>);\r\n        return false;\r\n      }\r\n    }\r\n    if (cellName == \"SocialFactor\" || cellName == \"IncrementFactor\") {\r\n      if (cellValue < 0 || cellValue > 9.99) {\r\n        toast.error(({ closeToast }) => (\r\n          <div>The value must be in the range of 0 - 9.99.</div>\r\n        ));\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  onAfterSaveCell(row, cellName, cellValue) {\r\n    let PHP = new PHPController();\r\n    let updatedPerson = {\r\n      Id: row[\"Id\"],\r\n      Name: row[\"Name\"],\r\n      Salary: row[\"Salary\"],\r\n      SocialFactor: row[\"SocialFactor\"],\r\n      IncrementFactor: row[\"IncrementFactor\"],\r\n      Flag: \"U\"\r\n    };\r\n    PHP.updatePerson(updatedPerson);\r\n  }\r\n\r\n  render() {\r\n    const options = {\r\n      insertBtn: this.createCustomInsertButton,\r\n      deleteBtn: this.createCustomDeleteButton,\r\n      onAddRow: this.onAddRow,\r\n      afterInsertRow: this.onAfterInsertRow,\r\n      afterDeleteRow: this.onAfterDeleteRow\r\n    };\r\n    const selectRow = {\r\n      mode: \"checkbox\"\r\n    };\r\n\r\n    const cellEditProp = {\r\n      mode: \"click\",\r\n      blurToSave: true,\r\n      beforeSaveCell: this.onBeforeSaveCell,\r\n      afterSaveCell: this.onAfterSaveCell\r\n    };\r\n\r\n    return (\r\n      <div className=\"tableDiv\">\r\n        <ToastContainer />\r\n        <BootstrapTable\r\n          data={this.state.persons}\r\n          cellEdit={cellEditProp}\r\n          selectRow={selectRow}\r\n          options={options}\r\n          insertRow\r\n          deleteRow\r\n          tableStyle={{\r\n            backgroundColor: \"#eeeeee\"\r\n          }}\r\n        >\r\n          <TableHeaderColumn\r\n            dataField=\"Id\"\r\n            isKey={true}\r\n            dataSort={true}\r\n            hidden={this.state.hidden}\r\n            autoValue={true}\r\n          >\r\n            Id\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"Name\" dataSort={true}>\r\n            Name\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"Salary\" dataSort={true}>\r\n            Salary\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"SocialFactor\" dataSort={true}>\r\n            Social Factor\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"IncrementFactor\" dataSort={true}>\r\n            Increment Factor\r\n          </TableHeaderColumn>\r\n        </BootstrapTable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default personTab;","import React, { Component } from \"react\";\r\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\r\nimport \"react-bootstrap-table/dist/react-bootstrap-table-all.min.css\";\r\nimport PHPController from \"./PHPController\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nclass projectTab extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.PHPController = new PHPController();\r\n    this.state = {\r\n      projects: [],\r\n      hidden: true\r\n    };\r\n    this.options = {\r\n      defaultSortName: \"Name\",\r\n      defaultSortOrder: \"desc\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let projects = this.PHPController.getProjects();\r\n    this.setState({ projects: projects });\r\n  }\r\n\r\n  createCustomInsertButton = openModal => {\r\n    return (\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-dark m-1\"\r\n        onClick={openModal}\r\n        style={{\r\n          paddingLeft: 15,\r\n          paddingRight: 15,\r\n          paddingTop: 8,\r\n          paddingBottom: 8\r\n        }}\r\n      >\r\n        Add\r\n      </button>\r\n    );\r\n  };\r\n\r\n  createCustomDeleteButton = onBtnClick => {\r\n    return (\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-dark m-1\"\r\n        onClick={onBtnClick}\r\n        style={{\r\n          paddingLeft: 15,\r\n          paddingRight: 15,\r\n          paddingTop: 8,\r\n          paddingBottom: 8\r\n        }}\r\n      >\r\n        Delete\r\n      </button>\r\n    );\r\n  };\r\n\r\n  onAddRow = (row, colInfo, errorCallback) => {\r\n    if (row.Name == \"\") return \"Please enter a name.\";\r\n    if (row.EndDate == \"\") return \"Please enter an end date.\";\r\n    if (\r\n      row.EndDate.length != 10 ||\r\n      row.EndDate.charAt(4) != \"-\" ||\r\n      row.EndDate.charAt(7) != \"-\"\r\n    )\r\n      return \"Please use the following date format: XXXX-XX-XX.\";\r\n    if (row.ExternalSalary == \"\") return \"Please enter External Salary.\";\r\n    if (isNaN(row.ExternalSalary)) return \"External Salary must be a number.\";\r\n    if (row.ExternalOverhead == \"\") return \"Please enter External Overhead.\";\r\n    if (isNaN(row.ExternalOverhead))\r\n      return \"External Overhead must be a number.\";\r\n    if (row.ExternalOtherCost == \"\") return \"Please enter External Other Cost.\";\r\n    if (isNaN(row.ExternalOtherCost))\r\n      return \"External Other Cost must be a number.\";\r\n    if (row.InternalSalary == \"\") return \"Please enter Internal Salary.\";\r\n    if (isNaN(row.InternalSalary)) return \"Internal Salary must be a number.\";\r\n    if (row.InternalOverhead == \"\") return \"Please enter Internal Overhead.\";\r\n    if (isNaN(row.InternalOverhead))\r\n      return \"Internal Overhead must be a number.\";\r\n    if (row.InternalOtherCost == \"\") return \"Please enter Internal Other Cost.\";\r\n    if (isNaN(row.InternalOtherCost))\r\n      return \"Internal Other Cost must be a number.\";\r\n    if (row.OverheadConstant == \"\") return \"Please enter Overhead Constant.\";\r\n    if (isNaN(row.OverheadConstant))\r\n      return \"Overhead Constant must be a number.\";\r\n    if (row.OverheadConstant < 0 || row.OverheadConstant > 9.99)\r\n      return \"Overhead Constant must be in the range of 0 - 9.99.\";\r\n    if (row.Stl == \"\") return \"Please enter STL.\";\r\n    if (isNaN(row.Stl)) return \"Stl must be a number.\";\r\n    if (row.Stl != 0 && row.Stl != 1)\r\n      return \"STL must be 1 (true) or 0 (false).\";\r\n    errorCallback();\r\n  };\r\n\r\n  onAfterInsertRow(row) {\r\n    row.Id = \"T\" + row.Id;\r\n    this.PHPController = new PHPController();\r\n    let newProject = {\r\n      Id: row[\"Id\"],\r\n      Name: row[\"Name\"],\r\n      EndDate: row[\"EndDate\"],\r\n      ExternalSalary: row[\"ExternalSalary\"],\r\n      ExternalOverhead: row[\"ExternalOverhead\"],\r\n      ExternalOtherCost: row[\"ExternalOtherCost\"],\r\n      InternalSalary: row[\"InternalSalary\"],\r\n      InternalOverhead: row[\"InternalOverhead\"],\r\n      InternalOtherCost: row[\"InternalOtherCost\"],\r\n      OverheadConstant: row[\"OverheadConstant\"],\r\n      Stl: row[\"Stl\"],\r\n      SpendingDate: \"\",\r\n      SpendingExternalSalary: \"0\",\r\n      SpendingExternalOverhead: \"0\",\r\n      SpendingExternalOtherCost: \"0\",\r\n      SpendingInternalSalary: \"0\",\r\n      SpendingInternalOverhead: \"0\",\r\n      SpendingInternalOtherCost: \"0\",\r\n      Flag: \"I\"\r\n    };\r\n    this.PHPController.insertProject(newProject);\r\n  }\r\n\r\n  onAfterDeleteRow(rowKeys, rows) {\r\n    let PHP = new PHPController();\r\n    for (let i = 0; i < rows.length; i++) {\r\n      let id = rowKeys[i];\r\n      id = rowKeys[i];\r\n\r\n      let removeProject = {\r\n        Id: id,\r\n        Flag: \"D\"\r\n      };\r\n      PHP.deleteProject(removeProject);\r\n    }\r\n  }\r\n\r\n  onBeforeSaveCell(row, cellName, cellValue) {\r\n    if (cellValue == \"\") {\r\n      toast.error(({ closeToast }) => <div>Value can not be empty.</div>);\r\n      return false;\r\n    }\r\n\r\n    if (\r\n      cellName == \"ExternalSalary\" ||\r\n      cellName == \"ExternalOverhead\" ||\r\n      cellName == \"ExternalOtherCost\" ||\r\n      cellName == \"InternalSalary\" ||\r\n      cellName == \"InternalOtherCost\" ||\r\n      cellName == \"InternalOverhead\" ||\r\n      cellName == \"OverheadConstant\" ||\r\n      cellName == \"Stl\"\r\n    ) {\r\n      if (isNaN(cellValue)) {\r\n        toast.error(({ closeToast }) => <div>Value must be a number.</div>);\r\n        return false;\r\n      }\r\n    }\r\n\r\n    if (cellName == \"EndDate\") {\r\n      if (\r\n        cellValue.length != 10 ||\r\n        cellValue.charAt(4) != \"-\" ||\r\n        cellValue.charAt(7) != \"-\"\r\n      ) {\r\n        toast.error(({ closeToast }) => (\r\n          <div>Please use the following date format: XXXX-XX-XX.</div>\r\n        ));\r\n        return false;\r\n      }\r\n    }\r\n    if (cellName == \"OverheadConstant\") {\r\n      if (cellValue < 0 || cellValue > 9.99) {\r\n        toast.error(({ closeToast }) => (\r\n          <div>Overhead Constant must be in the range of 0 - 9.99.</div>\r\n        ));\r\n        return false;\r\n      }\r\n    }\r\n    if (cellName == \"Stl\") {\r\n      if (cellValue != 0 && cellValue != 1) {\r\n        toast.error(({ closeToast }) => (\r\n          <div>STL must be 1 (true) or 0 (false).</div>\r\n        ));\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  onAfterSaveCell(row, cellName, cellValue) {\r\n    let PHP = new PHPController();\r\n    let updatedProject = {\r\n      Id: row[\"Id\"],\r\n      Name: row[\"Name\"],\r\n      EndDate: row[\"EndDate\"],\r\n      ExternalSalary: row[\"ExternalSalary\"],\r\n      ExternalOverhead: row[\"ExternalOverhead\"],\r\n      ExternalOtherCost: row[\"ExternalOtherCost\"],\r\n      InternalSalary: row[\"InternalSalary\"],\r\n      InternalOverhead: row[\"InternalOverhead\"],\r\n      InternalOtherCost: row[\"InternalOtherCost\"],\r\n      OverheadConstant: row[\"OverheadConstant\"],\r\n      Stl: row[\"Stl\"],\r\n      SpendingDate: row[\"SpendingDate\"],\r\n      SpendingExternalSalary: row[\"SpendingExternalSalary\"],\r\n      SpendingExternalOverhead: row[\"SpendingExternalOverhead\"],\r\n      SpendingExternalOtherCost: row[\"SpendingExternalOtherCost\"],\r\n      SpendingInternalSalary: row[\"SpendingInternalSalary\"],\r\n      SpendingInternalOverhead: row[\"SpendingInternalOverhead\"],\r\n      SpendingInternalOtherCost: row[\"SpendingInternalOtherCost\"],\r\n      Flag: \"U\"\r\n    };\r\n    PHP.updateProject(updatedProject);\r\n  }\r\n\r\n  render() {\r\n    const options = {\r\n      insertBtn: this.createCustomInsertButton,\r\n      deleteBtn: this.createCustomDeleteButton,\r\n      onAddRow: this.onAddRow,\r\n      afterInsertRow: this.onAfterInsertRow,\r\n      afterDeleteRow: this.onAfterDeleteRow\r\n    };\r\n    const selectRow = {\r\n      mode: \"checkbox\"\r\n    };\r\n    const cellEditProp = {\r\n      mode: \"click\",\r\n      blurToSave: true,\r\n      beforeSaveCell: this.onBeforeSaveCell,\r\n      afterSaveCell: this.onAfterSaveCell\r\n    };\r\n\r\n    return (\r\n      <div className=\"tableDiv\">\r\n        <ToastContainer />\r\n        <BootstrapTable\r\n          data={this.state.projects}\r\n          cellEdit={cellEditProp}\r\n          selectRow={selectRow}\r\n          options={options}\r\n          insertRow\r\n          deleteRow\r\n          tableStyle={{\r\n            backgroundColor: \"#eeeeee\"\r\n          }}\r\n        >\r\n          <TableHeaderColumn\r\n            dataField=\"Id\"\r\n            isKey={true}\r\n            dataSort={true}\r\n            hidden={this.state.hidden}\r\n            autoValue={true}\r\n          >\r\n            Id\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"Name\" dataSort={true}>\r\n            Name\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"EndDate\" dataSort={true}>\r\n            End Date\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"ExternalSalary\" dataSort={true}>\r\n            Ext. Salary\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"ExternalOverhead\" dataSort={true}>\r\n            Ext. Overhead\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"ExternalOtherCost\" dataSort={true}>\r\n            Ext. Other Costs\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"InternalSalary\" dataSort={true}>\r\n            Int. Salary\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"InternalOverhead\" dataSort={true}>\r\n            Int. Overhead\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"InternalOtherCost\" dataSort={true}>\r\n            Int. Other Costs\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"OverheadConstant\" dataSort={true}>\r\n            Overhead Const.\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"Stl\" dataSort={true}>\r\n            STL\r\n          </TableHeaderColumn>\r\n        </BootstrapTable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default projectTab;","import React, { Component } from \"react\";\r\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\r\nimport \"react-bootstrap-table/dist/react-bootstrap-table-all.min.css\";\r\nimport PHPController from \"./PHPController\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nclass spendingTab extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.PHPController = new PHPController();\r\n    this.state = {\r\n      spendings: [],\r\n      hidden: true\r\n    };\r\n    this.options = {\r\n      defaultSortName: \"Name\",\r\n      defaultSortOrder: \"desc\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let spendings = this.PHPController.getProjects();\r\n    this.setState({ spendings: spendings });\r\n  }\r\n\r\n  onBeforeSaveCell(row, cellName, cellValue) {\r\n    if (cellValue == \"\") {\r\n      toast.error(({ closeToast }) => <div>Value can not be empty.</div>);\r\n      return false;\r\n    }\r\n\r\n    if (\r\n      cellName == \"SpendingExternalSalary\" ||\r\n      cellName == \"SpendingExternalOverhead\" ||\r\n      cellName == \"SpendingExternalOtherCost\" ||\r\n      cellName == \"SpendingInternalSalary\" ||\r\n      cellName == \"SpendingInternalOtherCost\" ||\r\n      cellName == \"SpendingInternalOverhead\"\r\n    ) {\r\n      if (isNaN(cellValue)) {\r\n        toast.error(({ closeToast }) => <div>Value must be a number.</div>);\r\n        return false;\r\n      }\r\n    }\r\n\r\n    if (cellName == \"SpendingDate\") {\r\n      if (\r\n        cellValue.length != 10 ||\r\n        cellValue.charAt(4) != \"-\" ||\r\n        cellValue.charAt(7) != \"-\"\r\n      ) {\r\n        toast.error(({ closeToast }) => (\r\n          <div>Please use the following date format: XXXX-XX-XX.</div>\r\n        ));\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  onAfterSaveCell(row, cellName, cellValue) {\r\n    let PHP = new PHPController();\r\n    let updatedProject = {\r\n      Id: row[\"Id\"],\r\n      Name: row[\"Name\"],\r\n      EndDate: row[\"EndDate\"],\r\n      ExternalSalary: row[\"ExternalSalary\"],\r\n      ExternalOverhead: row[\"ExternalOverhead\"],\r\n      ExternalOtherCost: row[\"ExternalOtherCost\"],\r\n      InternalSalary: row[\"InternalSalary\"],\r\n      InternalOverhead: row[\"InternalOverhead\"],\r\n      InternalOtherCost: row[\"InternalOtherCost\"],\r\n      OverheadConstant: row[\"OverheadConstant\"],\r\n      Stl: row[\"Stl\"],\r\n      SpendingDate: row[\"SpendingDate\"],\r\n      SpendingExternalSalary: row[\"SpendingExternalSalary\"],\r\n      SpendingExternalOverhead: row[\"SpendingExternalOverhead\"],\r\n      SpendingExternalOtherCost: row[\"SpendingExternalOtherCost\"],\r\n      SpendingInternalSalary: row[\"SpendingInternalSalary\"],\r\n      SpendingInternalOverhead: row[\"SpendingInternalOverhead\"],\r\n      SpendingInternalOtherCost: row[\"SpendingInternalOtherCost\"],\r\n      Flag: \"U\"\r\n    };\r\n    PHP.updateProject(updatedProject);\r\n  }\r\n\r\n  render() {\r\n    const cellEditProp = {\r\n      mode: \"click\",\r\n      blurToSave: true,\r\n      beforeSaveCell: this.onBeforeSaveCell,\r\n      afterSaveCell: this.onAfterSaveCell\r\n    };\r\n    return (\r\n      <div className=\"tableDiv\">\r\n        <ToastContainer />\r\n        <BootstrapTable\r\n          data={this.state.spendings}\r\n          cellEdit={cellEditProp}\r\n          tableStyle={{\r\n            backgroundColor: \"#eeeeee\"\r\n          }}\r\n        >\r\n          <TableHeaderColumn\r\n            dataField=\"Id\"\r\n            isKey={true}\r\n            dataSort={true}\r\n            hidden={this.state.hidden}\r\n            autoValue={true}\r\n          >\r\n            Id\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"Name\" dataSort={true}>\r\n            Name\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"SpendingDate\" dataSort={true}>\r\n            Spending Date\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"SpendingExternalSalary\" dataSort={true}>\r\n            Ext. Salary\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn\r\n            dataField=\"SpendingExternalOverhead\"\r\n            dataSort={true}\r\n          >\r\n            Ext. Overhead\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn\r\n            dataField=\"SpendingExternalOtherCost\"\r\n            dataSort={true}\r\n          >\r\n            Ext. Other Costs\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"SpendingInternalSalary\" dataSort={true}>\r\n            Int. Salary\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn\r\n            dataField=\"SpendingInternalOverhead\"\r\n            dataSort={true}\r\n          >\r\n            Int. Overhead\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"InternalOtherCost\" dataSort={true}>\r\n            Int. Other Costs\r\n          </TableHeaderColumn>\r\n        </BootstrapTable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default spendingTab;","import React, { Component } from \"react\";\r\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\r\nimport \"react-bootstrap-table/dist/react-bootstrap-table-all.min.css\";\r\nimport PHPController from \"./PHPController\";\r\n\r\nclass remainingTab extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.PHPController = new PHPController();\r\n    this.state = {\r\n      remainings: [],\r\n      hidden: true\r\n    };\r\n    this.options = {\r\n      defaultSortName: \"Name\",\r\n      defaultSortOrder: \"desc\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let remainings = this.PHPController.getRemainings();\r\n    this.setState({ remainings: remainings });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"tableDiv\">\r\n        <BootstrapTable\r\n          data={this.state.remainings}\r\n          tableStyle={{\r\n            backgroundColor: \"#eeeeee\"\r\n          }}\r\n        >\r\n          <TableHeaderColumn\r\n            dataField=\"Id\"\r\n            isKey={true}\r\n            dataSort={true}\r\n            hidden={this.state.hidden}\r\n            autoValue={true}\r\n          >\r\n            Id\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"Name\" dataSort={true}>\r\n            Name\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"SpendingDate\" dataSort={true}>\r\n            Spending Date\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"ExternalSalary\" dataSort={true}>\r\n            Ext. Salary\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"ExternalOverhead\" dataSort={true}>\r\n            Ext. Overhead\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"ExternalOtherCost\" dataSort={true}>\r\n            Ext. Other Costs\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"InternalSalary\" dataSort={true}>\r\n            Int. Salary\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"InternalOverhead\" dataSort={true}>\r\n            Int. Overhead\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"InternalOtherCost\" dataSort={true}>\r\n            Int. Other Costs\r\n          </TableHeaderColumn>\r\n        </BootstrapTable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default remainingTab;","import React, { Component } from \"react\";\r\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\r\nimport \"react-bootstrap-table/dist/react-bootstrap-table-all.min.css\";\r\nimport PHPController from \"./PHPController\";\r\n\r\nfunction cellColorFormatter(cell, row) {\r\n  let c = \"gray\";\r\n  if (parseInt(cell) < 0) c = \"red\";\r\n  return (\r\n    <span>\r\n      <strong style={{ color: c }}>{parseInt(cell)}</strong>\r\n    </span>\r\n  );\r\n}\r\n\r\nfunction summaryFormatter(cell, row) {\r\n  let value =\r\n    parseInt(row[\"InternalOverhead\"]) +\r\n    parseInt(row[\"ExternalOverhead\"]) +\r\n    parseInt(row[\"InternalSalary\"]) +\r\n    parseInt(row[\"ExternalSalary\"]) +\r\n    parseInt(row[\"InternalOtherCost\"]) +\r\n    parseInt(row[\"ExternalOtherCost\"]);\r\n\r\n  let c = \"gray\";\r\n  if (value < 0) c = \"red\";\r\n  return (\r\n    <span>\r\n      <strong style={{ color: c }}>{value}</strong>\r\n    </span>\r\n  );\r\n}\r\n\r\nfunction toggleButtonText(state) {\r\n  let text = \"Toggle\";\r\n  if (state == false) {\r\n    text = \"Collapse\";\r\n  } else {\r\n    text = \"Expand\";\r\n  }\r\n  return <span>{text}</span>;\r\n}\r\n\r\nclass endBalanceTab extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.PHPController = new PHPController();\r\n    this.state = {\r\n      endbalances: [],\r\n      hidden: true\r\n    };\r\n    this.options = {\r\n      defaultSortName: \"Name\",\r\n      defaultSortOrder: \"desc\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let endbalances = this.PHPController.getEndBalances();\r\n    this.setState({ endbalances: endbalances });\r\n  }\r\n\r\n  handleEvent = event => {\r\n    this.state.hidden = !this.state.hidden;\r\n    let endbalances = this.PHPController.getEndBalances();\r\n    this.setState({ endbalances: endbalances });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"tableDiv\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-dark m-2\"\r\n          onClick={this.handleEvent}\r\n          style={{\r\n            paddingLeft: 15,\r\n            paddingRight: 15,\r\n            paddingTop: 8,\r\n            paddingBottom: 8,\r\n            width: 100\r\n          }}\r\n        >\r\n          {toggleButtonText(this.state.hidden)}\r\n        </button>\r\n        <BootstrapTable\r\n          data={this.state.endbalances}\r\n          tableStyle={{\r\n            backgroundColor: \"#eeeeee\"\r\n          }}\r\n        >\r\n          <TableHeaderColumn\r\n            dataField=\"Id\"\r\n            isKey={true}\r\n            dataSort={true}\r\n            hidden={true}\r\n            autoValue={true}\r\n          >\r\n            Id\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"Name\" dataSort={true}>\r\n            Name\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn\r\n            dataField=\"EndBalance\"\r\n            dataSort={true}\r\n            dataFormat={summaryFormatter}\r\n          >\r\n            End Balance\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn\r\n            dataField=\"ExternalSalary\"\r\n            dataSort={true}\r\n            hidden={this.state.hidden}\r\n            dataFormat={cellColorFormatter}\r\n          >\r\n            Ext. Salary\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn\r\n            dataField=\"InternalSalary\"\r\n            dataSort={true}\r\n            hidden={this.state.hidden}\r\n            dataFormat={cellColorFormatter}\r\n          >\r\n            Int. Salary\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn\r\n            dataField=\"ExternalOverhead\"\r\n            dataSort={true}\r\n            hidden={this.state.hidden}\r\n            dataFormat={cellColorFormatter}\r\n          >\r\n            Ext. Overhead\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn\r\n            dataField=\"InternalOverhead\"\r\n            dataSort={true}\r\n            hidden={this.state.hidden}\r\n            dataFormat={cellColorFormatter}\r\n          >\r\n            Int. Overhead\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn\r\n            dataField=\"ExternalOtherCost\"\r\n            dataSort={true}\r\n            hidden={this.state.hidden}\r\n            dataFormat={cellColorFormatter}\r\n          >\r\n            Ext. Other Costs\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn\r\n            dataField=\"InternalOtherCost\"\r\n            dataSort={true}\r\n            hidden={this.state.hidden}\r\n            dataFormat={cellColorFormatter}\r\n          >\r\n            Int. Other Costs\r\n          </TableHeaderColumn>\r\n        </BootstrapTable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default endBalanceTab;","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport NavigationBar from \"./components/navigationBar\";\r\nimport AllocationTab from \"./components/allocation_tab/allocationTab\";\r\nimport PersonTab from \"./components/personTab\";\r\nimport ProjectTab from \"./components/projectTab\";\r\nimport SpendingTab from \"./components/spendingTab\";\r\nimport RemainingTab from \"./components/remainingTab\";\r\nimport EndBalanceTab from \"./components/endBalanceTab\";\r\nimport { Route, withRouter } from \"react-router-dom\";\r\nimport BodyBackgroundColor from \"react-body-backgroundcolor\";\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      /*  Attach the diffenrent components her to build the whole UI */\r\n      <BodyBackgroundColor backgroundColor='#3d3d3d'>\r\n        <React.Fragment>\r\n          <NavigationBar/>\r\n          <Route path=\"/allocationTable\" component={AllocationTab} />\r\n          <Route path=\"/personTable\" component={PersonTab} />\r\n          <Route path=\"/projectTable\" component={ProjectTab} />\r\n          <Route path=\"/spendingTable\" component={SpendingTab} />\r\n          <Route path=\"/remaningTable\" component={RemainingTab} />\r\n          <Route path=\"/endBalanceTable\" component={EndBalanceTab} />\r\n        </React.Fragment>\r\n      </BodyBackgroundColor>\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport BrowserRouter from 'react-router-dom/BrowserRouter';\r\n\r\n\r\nconst app = (\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}