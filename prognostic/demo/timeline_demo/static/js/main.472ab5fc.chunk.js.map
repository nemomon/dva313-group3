{"version":3,"sources":["components/navigationBar.jsx","components/allocation_tab/allocation_view/PHP.jsx","components/allocation_tab/allocation_view/allocationView.jsx","components/allocation_tab/persons_list/search.jsx","components/allocation_tab/allocationTab.jsx","components/personTab.jsx","components/projectTab.jsx","components/spendingTab.jsx","components/remainingTab.jsx","components/endBalanceTab.jsx","App.js","serviceWorker.js","index.js"],"names":["NavigationBar","state","isOpen","toggleCollapse","_this","setState","react_default","a","createElement","mdbreact","color","dark","expand","className","onClick","this","id","navbar","left","to","nav","caret","right","href","React","Component","allocations","group","start","Date","end","content","projects","name","projects2","PHP","Object","classCallCheck","instance","freeze","AllocationView","props","possibleConstructorReturn","getPrototypeOf","call","options","width","height","groupOrder","orientation","axis","item","editable","add","remove","updateGroup","updateTime","zoomMax","zoomMin","align","stack","type","onAdd","callback","onRemove","onMoving","onMove","onInitialDrawComplete","onUpdate","optionsHandler","console","log","mouseMoveHandler","items","groups","init","timelineRef","createRef","push","endDate","style","prompt","i","getItemById","date","year","getFullYear","month","getMonth","nextMonth","nextYear","current","$el","setWindow","animation","length","getAllocations","createGroups","getItems","calculateTimelineHeight","createVisualBoundaries","getProjects","build_default","ref","selectHandler","doubleClickHandler","users","Search","searchString","handleChange","bind","assertThisInitialized","refs","search","focus","value","_users","trim","toLowerCase","filter","user","match","onChange","placeholder","map","l","email","AllocationTab","persons_list_search","allocationView","products","addProduct","nam","sal","soc","inc","salary","social","increment","rand","Math","floor","random","cellEditProp","mode","App","Fragment","navigationBar","allocation_tab_allocationTab","Boolean","window","location","hostname","app","BrowserRouter_default","src_App_0","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4SAsEeA,mOA9DbC,MAAQ,CACNC,QAAQ,KAGVC,eAAiBC,EAAKC,SAAS,CAAEH,QAASE,EAAKH,MAAMC,iFAGnD,OAEEI,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,MAAM,QAAQC,MAAI,EAACC,OAAO,MAC9BN,EAAAC,EAAAC,cAACC,EAAA,YAAD,KACEH,EAAAC,EAAAC,cAAA,UAAQK,UAAU,cAAlB,eAEFP,EAAAC,EAAAC,cAACC,EAAA,cAAD,CACEK,QAASC,KAAKZ,iBAEhBG,EAAAC,EAAAC,cAACC,EAAA,SAAD,CACEO,GAAG,kBACHd,OAAQa,KAAKd,MAAMC,OACnBe,QAAM,GAENX,EAAAC,EAAAC,cAACC,EAAA,UAAD,CAAWS,MAAI,GACbZ,EAAAC,EAAAC,cAACC,EAAA,QAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,QAAD,CAASU,GAAG,gBAAZ,WAEFb,EAAAC,EAAAC,cAACC,EAAA,QAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,QAAD,CAASU,GAAG,iBAAZ,aAEFb,EAAAC,EAAAC,cAACC,EAAA,QAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,QAAD,CAASU,GAAG,oBAAZ,eAEFb,EAAAC,EAAAC,cAACC,EAAA,QAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,QAAD,CAASU,GAAG,kBAAZ,aAEFb,EAAAC,EAAAC,cAACC,EAAA,QAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,QAAD,CAASU,GAAG,kBAAZ,aAEFb,EAAAC,EAAAC,cAACC,EAAA,QAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,QAAD,CAASU,GAAG,oBAAZ,gBAEFb,EAAAC,EAAAC,cAACC,EAAA,QAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,eAAD,CAAgBW,KAAG,EAACC,OAAK,GACvBf,EAAAC,EAAAC,cAAA,OAAKK,UAAU,sBAAf,QAEFP,EAAAC,EAAAC,cAACC,EAAA,aAAD,CAAca,OAAK,GACjBhB,EAAAC,EAAAC,cAACC,EAAA,aAAD,CAAcc,KAAK,MAAnB,SACAjB,EAAAC,EAAAC,cAACC,EAAA,aAAD,CAAcc,KAAK,MAAnB,eAKRjB,EAAAC,EAAAC,cAACC,EAAA,QAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,QAAD,CAASU,GAAG,MAAZ,kBAtDYK,IAAMC,8BCN5BC,EAAc,CAChB,CACIV,GAAI,EACJW,MAAO,EACPC,MAAO,IAAIC,KAAK,KAAM,GAAI,GAC1BC,IAAK,IAAID,KAAK,KAAM,GAAI,GACxBE,QAAS,OAEb,CACIf,GAAI,EACJW,MAAO,EACPC,MAAO,IAAIC,KAAK,KAAM,GAAI,IAC1BC,IAAK,IAAID,KAAK,KAAM,GAAI,IACxBE,QAAS,OAEb,CACIf,GAAI,EACJW,MAAO,EACPC,MAAO,IAAIC,KAAK,KAAM,GAAI,GAC1BC,IAAK,IAAID,KAAK,KAAM,GAAI,GACxBE,QAAS,OAEb,CACIf,GAAI,EACJW,MAAO,EACPC,MAAO,IAAIC,KAAK,KAAM,GAAI,IAC1BC,IAAK,IAAID,KAAK,KAAM,GAAI,IACxBE,QAAS,OAEb,CACIf,GAAI,EACJW,MAAO,EACPC,MAAO,IAAIC,KAAK,KAAM,EAAG,IACzBC,IAAK,IAAID,KAAK,KAAM,EAAG,IACvBE,QAAS,OAEb,CACIf,GAAI,EACJW,MAAO,EACPC,MAAO,IAAIC,KAAK,KAAM,GAAI,IAC1BC,IAAK,IAAID,KAAK,KAAM,GAAI,IACxBE,QAAS,OAEb,CACIf,GAAI,EACJW,MAAO,EACPC,MAAO,IAAIC,KAAK,KAAM,EAAG,GACzBC,IAAK,IAAID,KAAK,KAAM,EAAG,IACvBE,QAAS,QAMXC,EAAW,CACb,CACIhB,GAAI,EACJiB,KAAM,aACNL,MAAO,IAAIC,KAAK,KAAM,GAAI,GAC1BC,IAAK,IAAID,KAAK,KAAM,GAAI,KAE5B,CACIb,GAAI,EACJiB,KAAM,WACNL,MAAO,IAAIC,KAAK,KAAM,GAAI,GAC1BC,IAAK,IAAID,KAAK,KAAM,EAAG,IAE3B,CACIb,GAAI,EACJiB,KAAM,SACNL,MAAO,IAAIC,KAAK,KAAM,GAAI,GAC1BC,IAAK,IAAID,KAAK,KAAM,GAAI,KAE5B,CACIb,GAAI,EACJiB,KAAM,oBACNL,MAAO,IAAIC,KAAK,KAAM,GAAI,GAC1BC,IAAK,IAAID,KAAK,KAAM,EAAG,IAE3B,CACIb,GAAI,EACJiB,KAAM,cACNL,MAAO,IAAIC,KAAK,KAAM,GAAI,IAC1BC,IAAK,IAAID,KAAK,KAAM,EAAG,IAE3B,CACIb,GAAI,EACJiB,KAAM,SACNL,MAAO,IAAIC,KAAK,KAAM,GAAI,GAC1BC,IAAK,IAAID,KAAK,KAAM,EAAG,MAKzBK,EAAY,CACd,CACIlB,GAAI,EACJiB,KAAM,iBACNL,MAAO,IAAIC,KAAK,KAAM,GAAI,GAC1BC,IAAK,IAAID,KAAK,KAAM,GAAI,KAE5B,CACIb,GAAI,EACJiB,KAAM,SACNL,MAAO,IAAIC,KAAK,KAAM,GAAI,GAC1BC,IAAK,IAAID,KAAK,KAAM,EAAG,IAE3B,CACIb,GAAI,EACJiB,KAAM,UACNL,MAAO,IAAIC,KAAK,KAAM,GAAI,GAC1BC,IAAK,IAAID,KAAK,KAAM,GAAI,KAE5B,CACIb,GAAI,EACJiB,KAAM,UACNL,MAAO,IAAIC,KAAK,KAAM,GAAI,GAC1BC,IAAK,IAAID,KAAK,KAAM,EAAG,IAE3B,CACIb,GAAI,EACJiB,KAAM,cACNL,MAAO,IAAIC,KAAK,KAAM,GAAI,IAC1BC,IAAK,IAAID,KAAK,KAAM,EAAG,IAE3B,CACIb,GAAI,EACJiB,KAAM,SACNL,MAAO,IAAIC,KAAK,KAAM,GAAI,GAC1BC,IAAK,IAAID,KAAK,KAAM,EAAG,MAMzBM,aACF,SAAAA,IAMI,OANWC,OAAAC,EAAA,EAAAD,CAAArB,KAAAoB,GACNA,EAAIG,WAELH,EAAIG,SAAWvB,MAGZoB,EAAIG,mEAIX,OAAON,yCAKP,OAAOE,yCAGIlB,GACX,OAAOU,WAKTY,EAAW,IAAIH,EACrBC,OAAOG,OAAOD,GAECH,QCiEAK,cApNb,SAAAA,EAAYC,GAAO,IAAArC,EAAA,OAAAgC,OAAAC,EAAA,EAAAD,CAAArB,KAAAyB,IACjBpC,EAAAgC,OAAAM,EAAA,EAAAN,CAAArB,KAAAqB,OAAAO,EAAA,EAAAP,CAAAI,GAAAI,KAAA7B,KAAM0B,KAgBRI,QAAU,CACRC,MAAO,OACPC,OAAQ,QACRnB,MAAO,IAAIC,KACXC,IAAK,IAAID,KACTmB,WAAY,KACZC,YAAa,CACXC,KAAM,SACNC,KAAM,UAERC,SAAU,CACRC,KAAK,EACLC,QAAQ,EACRC,aAAa,EACbC,YAAY,GAEdC,QAAS,SACTC,QAAS,MACTC,MAAO,SACPC,OAAO,EACPC,KAAM,QAENC,MAAO,SAACX,EAAMY,GACZ3D,EAAK0D,MAAMX,EAAMY,IAEnBC,SAAU,SAACb,EAAMY,GACf3D,EAAK4D,SAASb,EAAMY,IAEtBE,SAAU,SAACd,EAAMY,GACf3D,EAAK6D,SAASd,EAAMY,IAEtBG,OAAQ,SAACf,EAAMY,GACb3D,EAAK8D,OAAOf,EAAMY,IAEpBI,sBAAuB,WACrB/D,EAAK+D,yBAEPC,SAAU,SAACjB,EAAMY,GACf3D,EAAKgE,SAASjB,EAAMY,KAvDL3D,EAgLnBiE,eAAiB,SAAC5B,GACE,MAAdA,EAAMU,MACRmB,QAAQC,IAAI,wBAlLGnE,EAuLnBoE,iBAAmB,SAAC/B,GACA,MAAdA,EAAMU,MACRmB,QAAQC,IAAI9B,EAAMU,OAtLpB/C,EAAKH,MAAQ,CACXwE,MAAO,GACPC,OAAQ,IAGVtE,EAAK+B,IAAM,IAAIA,EACf/B,EAAKuE,OAGLvE,EAAKwE,YAAcpD,IAAMqD,YAZRzE,qEA4Db+C,EAAMY,IAzES,GA0EfZ,EAAKxB,OAKTwB,EAAKpB,QAAU,MACfhB,KAAKd,MAAMwE,MAAMK,KAAK3B,GAEtBY,EAASZ,IAPPY,EAAS,uCAUJZ,EAAMY,GACbA,EAASZ,oCAIFA,EAAMY,GACb,IAAIgB,EAAUhE,KAAKd,MAAMyE,OAAOvB,EAAKxB,OAAOG,IAC5CqB,EAAK6B,MAAQ7B,EAAKrB,IAAMiD,EAAU,kCAAoC,GACtEhB,EAASZ,oCAIFA,EAAMY,GACbZ,EAAKpB,QAAUkD,OAAO,yBAA0B9B,EAAKpB,SACrC,MAAhBoB,EAAKpB,QAAkBgC,EAASZ,GAAQY,EAAS,qCAK5CZ,EAAMY,GACX,GAAIZ,EAAKvB,OAASuB,EAAKrB,IACrBiC,EAAS,UADX,CAIA,IAAImB,EAAInE,KAAKoE,YAAYhC,EAAKnC,IAE9BkE,EAAEpD,IAAMqB,EAAKrB,IACboD,EAAEtD,MAAQuB,EAAKvB,MAEfmC,EAASZ,oDAKT,IAAIiC,EAAO,IAAIvD,KACXwD,EAAOD,EAAKE,cACZC,EAAQH,EAAKI,WACbC,EAAsB,IAATF,EAAc,EAAIA,EAAQ,EACvCG,EAAqB,IAATH,EAAcF,EAAO,EAAIA,EAGzCtE,KAAK6D,YAAYe,QAAQC,IAAIC,UAAU,IAAIhE,KAAKwD,EAAME,EAF5C,GAEyD,IAAI1D,KAAK6D,EAAUD,EAF5E,GAE6F,CAAEK,WAAW,sDAIpH/E,KAAK8B,QAAQE,OAAoC,GAA3BhC,KAAKd,MAAMyE,OAAOqB,OAAc,GAAK,sCAI3DhF,KAAKd,MAAMwE,MAAQ1D,KAAKoB,IAAI6D,eAAe,kCAI3CjF,KAAKkF,eACLlF,KAAKmF,WACLnF,KAAKoF,0BACLpF,KAAKqF,0EAKL,IAAK,IAAIlB,EAAI,EAAGA,EAAInE,KAAKd,MAAMyE,OAAOqB,OAAQb,IAAK,CAEjD,IAAI/B,EAAO,CACTxB,MAAOZ,KAAKd,MAAMyE,OAAOQ,GAAGlE,GAC5BY,MAAOb,KAAKd,MAAMyE,OAAOQ,GAAGpD,IAC5BA,IAAKf,KAAKd,MAAMyE,OAAOQ,GAAGpD,IAC1B+B,KAAM,cAGR9C,KAAKd,MAAMwE,MAAMK,KAAK3B,2CAKxB,IAAInB,EAAWjB,KAAKoB,IAAIkE,cACxBtF,KAAKd,MAAMyE,OAAOI,KAAK,CAAE9D,IAjKN,EAiK0Be,QAAS,UAItD,IAAK,IAAImD,EAAI,EAAGA,EAAIlD,EAAS+D,OAAQb,IACnCnE,KAAKd,MAAMyE,OAAOI,KAAK,CAAE9D,GAAIgB,EAASkD,GAAGlE,GAAIe,QAASC,EAASkD,GAAGjD,KAAMH,IAAKE,EAASkD,GAAGpD,0CAKjFd,GACV,IAAK,IAAIkE,EAAI,EAAGA,EAAInE,KAAKd,MAAMwE,MAAMsB,OAAQb,IAC3C,GAAInE,KAAKd,MAAMwE,MAAMS,GAAGlE,IAAMA,EAC5B,OAAOD,KAAKd,MAAMwE,MAAMS,GAI5B,OAAO,sCA2BP,OACE5E,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,gBAAf,kBACAP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,qBACbP,EAAAC,EAAAC,cAAA,WAAMO,KAAK0B,MAAMR,MACjB3B,EAAAC,EAAAC,cAAC8F,EAAA/F,EAAD,CACEgG,IAAKxF,KAAK6D,YACV4B,cAAezF,KAAKyF,cACpBC,mBAAoB1F,KAAKsD,eACzBG,iBAAkBzD,KAAKyD,iBACvB3B,QAAS9B,KAAK8B,QACd4B,MAAO1D,KAAKd,MAAMwE,MAClBC,OAAQ3D,KAAKd,MAAMyE,kBA7MFjD,qBCdzBiF,EAAQ,CACR,CACIzE,KAAM,SAEV,CACIA,KAAM,SAEV,CACIA,KAAM,SAGV,CACIA,KAAM,SAGV,CACIA,KAAM,OAGV,CACIA,KAAM,OAEV,CACIA,KAAM,QAgEC0E,cA1DX,SAAAA,EAAYlE,GAAO,IAAArC,EAAA,OAAAgC,OAAAC,EAAA,EAAAD,CAAArB,KAAA4F,IACfvG,EAAAgC,OAAAM,EAAA,EAAAN,CAAArB,KAAAqB,OAAAO,EAAA,EAAAP,CAAAuE,GAAA/D,KAAA7B,KAAM0B,KACDxC,MAAQ,CACT2G,aAAc,GACdF,MAAO,IAEXtG,EAAKyG,aAAezG,EAAKyG,aAAaC,KAAlB1E,OAAA2E,EAAA,EAAA3E,QAAA2E,EAAA,EAAA3E,CAAAhC,KANLA,mFAUfW,KAAKV,SAAS,CACVqG,MAAOA,IAEX3F,KAAKiG,KAAKC,OAAOC,+CAIjBnG,KAAKV,SAAS,CACVuG,aAAc7F,KAAKiG,KAAKC,OAAOE,yCAKnC,IAAIC,EAASrG,KAAKd,MAAMyG,MACpBO,EAASlG,KAAKd,MAAM2G,aAAaS,OAAOC,cAQ5C,OANIL,EAAOlB,OAAS,IAChBqB,EAASA,EAAOG,OAAO,SAAUC,GAC7B,OAAOA,EAAKvF,KAAKqF,cAAcG,MAAMR,MAKzC3G,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACXP,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SACIqD,KAAK,OACLsD,MAAOpG,KAAKd,MAAM2G,aAClBL,IAAI,SACJmB,SAAU3G,KAAK8F,aACfc,YAAY,mBAEhBrH,EAAAC,EAAAC,cAAA,UACK4G,EAAOQ,IAAI,SAAAC,GACR,OACIvH,EAAAC,EAAAC,cAAA,UACKqH,EAAE5F,KADP,IACa3B,EAAAC,EAAAC,cAAA,KAAGe,KAAK,KAAKsG,EAAEC,oBAhDvCtG,IAAMC,WCfZsG,2LARX,OACEzH,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACbP,EAAAC,EAAAC,cAACwH,EAAD,MACA1H,EAAAC,EAAAC,cAACyH,EAAD,cALoBxG,qBCCtByG,SAAW,IAEjB,SAASC,EAAWC,EAAKC,EAAKC,EAAKC,GACtBL,EAASnC,OACpBmC,EAASpD,KAAK,CAEZ7C,KAAMmG,EACNI,OAAQH,EACRI,OAAQH,EACRI,UAAWH,IAMf,SAASI,IACP,OAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAoB,EAE7CX,EAAW,QAASQ,IAAQA,IAAQA,KACpCR,EAAW,cAAeQ,IAAQA,IAAQA,KAC1CR,EAAW,QAASQ,IAAQA,IAAQA,KACpCR,EAAW,MAAOQ,IAAQA,IAAQA,KAClCR,EAAW,OAAQQ,IAAQA,IAAQA,KACnCR,EAAW,SAAUQ,IAAQA,IAAQA,KACrCR,EAAW,WAAYQ,IAAQA,IAAQA,KACvCR,EAAW,QAASQ,IAAQA,IAAQA,KAIpC,IAAMI,EAAe,CACnBC,KAAM,SC9BFd,GDiCkBzG,YCjCP,IAmBjB,IAAMsH,EAAe,CACnBC,KAAM,SCpBFd,GDuBmBzG,YCvBR,IAiBjB,IAAMsH,EAAe,CACnBC,KAAM,SClBFd,GDqBoBzG,YCrBT,IAiBjB,IAAMsH,EAAe,CACnBC,KAAM,SClBFd,GDqBqBzG,YCrBV,IAejB,IAAMsH,EAAe,CACnBC,KAAM,SCSOC,GDNaxH,6LCZxB,OAEEnB,EAAAC,EAAAC,cAACF,EAAAC,EAAM2I,SAAP,KACE5I,EAAAC,EAAAC,cAAC2I,EAAD,MACA7I,EAAAC,EAAAC,cAAC4I,EAAD,cANU3H,cCCE4H,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS/B,MACvB,iFCXAgC,EACFnJ,EAAAC,EAAAC,cAACkJ,EAAAnJ,EAAD,KACAD,EAAAC,EAAAC,cAACmJ,EAAD,OAIJC,IAASC,OAAOJ,EAAKK,SAASC,eAAe,SDoHvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.472ab5fc.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Navbar, NavbarBrand, NavbarNav, NavItem, NavLink, NavbarToggler, Collapse, FormInline, Dropdown, DropdownToggle, DropdownMenu,  DropdownItem } from \"mdbreact\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\n\r\n\r\nclass NavigationBar extends React.Component {\r\n  state = {\r\n    isOpen: false\r\n  };\r\n\r\n  toggleCollapse = this.setState({ isOpen: !this.state.isOpen });\r\n\r\n  render() {\r\n    return (\r\n\r\n      <Navbar color=\"black\" dark expand=\"md\">\r\n          <NavbarBrand>\r\n            <strong className=\"white-text\">PROGNOSTIC</strong>\r\n          </NavbarBrand>\r\n          <NavbarToggler\r\n            onClick={this.toggleCollapse}\r\n          />\r\n          <Collapse\r\n            id=\"navbarCollapse3\"\r\n            isOpen={this.state.isOpen}\r\n            navbar\r\n          >\r\n            <NavbarNav left>\r\n              <NavItem>\r\n                <NavLink to=\"/personTable\">People</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink to=\"/projectTable\">Projects</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink to=\"/allocationTable\">Allocation</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink to=\"/spendingTable\">Spending</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink to=\"/remaningTable\">Remaning</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink to=\"/endBalanceTable\">End Balance</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <Dropdown>\r\n                  <DropdownToggle nav caret>\r\n                    <div className=\"d-none d-md-inline\">Add</div>\r\n                  </DropdownToggle>\r\n                  <DropdownMenu right>\r\n                    <DropdownItem href=\"#!\">Staff</DropdownItem>\r\n                    <DropdownItem href=\"#!\">Project</DropdownItem>\r\n                  </DropdownMenu>\r\n                </Dropdown>\r\n              </NavItem>\r\n            </NavbarNav>\r\n            <NavItem>\r\n                <NavLink to=\"#!\">SAVE</NavLink>\r\n              </NavItem>\r\n          </Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n/* Need to type this after creating a component so other files can import it */\r\n\r\nexport default NavigationBar;\r\n","\r\nconst allocations = [\r\n    {\r\n        id: 1,\r\n        group: 1,\r\n        start: new Date(2018, 11, 6),\r\n        end: new Date(2018, 11, 9), // end is optional\r\n        content: \"100\"\r\n    },\r\n    {\r\n        id: 2,\r\n        group: 1,\r\n        start: new Date(2018, 11, 11),\r\n        end: new Date(2018, 11, 14), // end is optional\r\n        content: \"100\"\r\n    },\r\n    {\r\n        id: 3,\r\n        group: 2,\r\n        start: new Date(2018, 11, 1),\r\n        end: new Date(2018, 11, 3), // end is optional\r\n        content: \"100\"\r\n    },\r\n    {\r\n        id: 4,\r\n        group: 2,\r\n        start: new Date(2018, 11, 15),\r\n        end: new Date(2018, 11, 17), // end is optional\r\n        content: \"100\"\r\n    },\r\n    {\r\n        id: 5,\r\n        group: 3,\r\n        start: new Date(2019, 9, 10),\r\n        end: new Date(2019, 9, 20), // end is optional\r\n        content: \"100\"\r\n    },\r\n    {\r\n        id: 6,\r\n        group: 5,\r\n        start: new Date(2018, 11, 25),\r\n        end: new Date(2018, 11, 29), // end is optional\r\n        content: \"100\"\r\n    },\r\n    {\r\n        id: 7,\r\n        group: 6,\r\n        start: new Date(2018, 7, 1),\r\n        end: new Date(2018, 7, 29), // end is optional\r\n        content: \"100\"\r\n    }\r\n];\r\n\r\n\r\n\r\nconst projects = [\r\n    {\r\n        id: 1,\r\n        name: \"Prognostic\",\r\n        start: new Date(2018, 11, 1),\r\n        end: new Date(2018, 11, 30), // end is optional\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"GetThere\",\r\n        start: new Date(2018, 10, 1),\r\n        end: new Date(2019, 1, 1), // end is optional\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"AI-DOG\",\r\n        start: new Date(2018, 11, 1),\r\n        end: new Date(2018, 11, 15), // end is optional\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Untiteled Project\",\r\n        start: new Date(2018, 11, 1),\r\n        end: new Date(2019, 2, 1), // end is optional\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Designer-xx\",\r\n        start: new Date(2018, 11, 19),\r\n        end: new Date(2019, 3, 1), // end is optional\r\n    },\r\n    {\r\n        id: 6,\r\n        name: \"TOMATO\",\r\n        start: new Date(2018, 11, 1),\r\n        end: new Date(2019, 1, 15), // end is optional\r\n    }\r\n];\r\n\r\n\r\nconst projects2 = [\r\n    {\r\n        id: 1,\r\n        name: \"HigherBuilding\",\r\n        start: new Date(2018, 11, 1),\r\n        end: new Date(2018, 11, 30), // end is optional\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Dricks\",\r\n        start: new Date(2018, 10, 1),\r\n        end: new Date(2019, 1, 1), // end is optional\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"AI-LOL2\",\r\n        start: new Date(2018, 11, 1),\r\n        end: new Date(2018, 11, 15), // end is optional\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Project\",\r\n        start: new Date(2018, 11, 1),\r\n        end: new Date(2019, 2, 1), // end is optional\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Designer-UY\",\r\n        start: new Date(2018, 11, 19),\r\n        end: new Date(2019, 3, 1), // end is optional\r\n    },\r\n    {\r\n        id: 6,\r\n        name: \"Blades\",\r\n        start: new Date(2018, 11, 1),\r\n        end: new Date(2019, 1, 15), // end is optional\r\n    }\r\n];\r\n\r\n\r\n/* Singelton */\r\nclass PHP {\r\n    constructor() {\r\n        if (!PHP.instance) {\r\n            //this.data = [];\r\n            PHP.instance = this;\r\n        }\r\n\r\n        return PHP.instance;\r\n    }\r\n\r\n    getProjects() {\r\n        return projects;\r\n    }\r\n\r\n\r\n    getProjects2() {\r\n        return projects2;\r\n    }\r\n\r\n    getAllocations(id) {\r\n        return allocations;\r\n    }\r\n\r\n}\r\n\r\nconst instance = new PHP();\r\nObject.freeze(instance);\r\n\r\nexport default PHP;","import React, { Component } from \"react\";\r\nimport Timeline from \"react-visjs-timeline\";\r\nimport PHP from \"./PHP\"\r\n\r\nconst ID_GROUP_TOTAL = -1;\r\n\r\n/*\r\nPROBLEM: The internal dataset visjs are using is not exposed to use, \r\nmeaning that any changes made on the allocations through the UI will not be reflected in this state.\r\n\r\nHowever, we can use callbacks when an item has been added, removed, moved, dragged, or updated, so\r\nwe can through these methods ensure that we stay in sync with any changes. This problem arises\r\nbecuase we are using an react abstraction, that is using the real visjs-timeline internally. \r\n\r\n*/\r\n\r\nclass AllocationView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      items: [],\r\n      groups: [],\r\n    };\r\n\r\n    this.PHP = new PHP();\r\n    this.init();\r\n\r\n    /* A reference to the timeline object so methods can be called on it */\r\n    this.timelineRef = React.createRef();\r\n  }\r\n\r\n\r\n  /* Options and events for the timeline, events are delageted to class methods  */\r\n  options = {\r\n    width: \"100%\",\r\n    height: \"700px\",\r\n    start: new Date(),\r\n    end: new Date(),\r\n    groupOrder: \"id\",\r\n    orientation: {\r\n      axis: \"bottom\",\r\n      item: \"bottom\"\r\n    },\r\n    editable: {\r\n      add: true,\r\n      remove: true,\r\n      updateGroup: false,\r\n      updateTime: true\r\n    },\r\n    zoomMax: 1000 * 60 * 60 * 24 * 24 * 12,\r\n    zoomMin: 1000 * 60 * 60 * 24,\r\n    align: \"center\",\r\n    stack: false,\r\n    type: \"range\",\r\n\r\n    onAdd: (item, callback) => {\r\n      this.onAdd(item, callback);\r\n    },\r\n    onRemove: (item, callback) => {\r\n      this.onRemove(item, callback);\r\n    },\r\n    onMoving: (item, callback) => {\r\n      this.onMoving(item, callback);\r\n    },\r\n    onMove: (item, callback) => {\r\n      this.onMove(item, callback);\r\n    },\r\n    onInitialDrawComplete: () => {\r\n      this.onInitialDrawComplete();\r\n    },\r\n    onUpdate: (item, callback) => {\r\n      this.onUpdate(item, callback);\r\n    }\r\n  };\r\n\r\n\r\n  onAdd(item, callback) {\r\n    if (item.group == ID_GROUP_TOTAL) {\r\n      callback(null);\r\n      return;\r\n    }\r\n\r\n    item.content = \"100\";\r\n    this.state.items.push(item);\r\n\r\n    callback(item);\r\n  }\r\n\r\n  onRemove(item, callback) {\r\n    callback(item);\r\n  }\r\n\r\n  /* Checking if the allocations end date exceeds the projects when moving */\r\n  onMoving(item, callback) {\r\n    var endDate = this.state.groups[item.group].end;\r\n    item.style = item.end > endDate ? \"background: rgba(175, 0, 0, 1);\" : \"\";\r\n    callback(item);\r\n  }\r\n\r\n  /* Fired when double clicking an allocation */\r\n  onUpdate(item, callback) {\r\n    item.content = prompt(\"Input employment rate:\", item.content);\r\n    item.content != null ? callback(item) : callback(null);\r\n\r\n  }\r\n\r\n  /* Fired when an item has been moved or dragged */\r\n  onMove(item, callback) {\r\n    if (item.start >= item.end) {\r\n      callback(null);\r\n      return;\r\n    }\r\n    var i = this.getItemById(item.id);\r\n\r\n    i.end = item.end;\r\n    i.start = item.start;\r\n\r\n    callback(item);\r\n  }\r\n\r\n  /* Set the timeline window to display the current month */\r\n  onInitialDrawComplete() {\r\n    var date = new Date();\r\n    var year = date.getFullYear();\r\n    var month = date.getMonth();\r\n    var nextMonth = (month == 11 ? 0 : month + 1);\r\n    var nextYear = (month == 11 ? year + 1 : year);\r\n    var day = 1;\r\n\r\n    this.timelineRef.current.$el.setWindow(new Date(year, month, day), new Date(nextYear, nextMonth, day), { animation: false });\r\n  }\r\n\r\n  calculateTimelineHeight() {\r\n    this.options.height = this.state.groups.length * 50 + 70 + 50;;\r\n  }\r\n\r\n  getItems() {\r\n    this.state.items = this.PHP.getAllocations(1);\r\n  }\r\n\r\n  init() {\r\n    this.createGroups();\r\n    this.getItems();\r\n    this.calculateTimelineHeight();\r\n    this.createVisualBoundaries();\r\n  }\r\n\r\n  createVisualBoundaries() {\r\n    /* not including the total timeline */\r\n    for (var i = 1; i < this.state.groups.length; i++) {\r\n\r\n      var item = {\r\n        group: this.state.groups[i].id,\r\n        start: this.state.groups[i].end,\r\n        end: this.state.groups[i].end,\r\n        type: \"background\"\r\n      };\r\n\r\n      this.state.items.push(item);\r\n    }\r\n  }\r\n\r\n  createGroups() {\r\n    let projects = this.PHP.getProjects();\r\n    this.state.groups.push({ id: ID_GROUP_TOTAL, content: \"TOTAL\" });\r\n\r\n    /* the project id becomes the group id, also including the projects end date in the group for easy access\r\n    when checking if an allocation exceed the end date */\r\n    for (var i = 0; i < projects.length; i++) {\r\n      this.state.groups.push({ id: projects[i].id, content: projects[i].name, end: projects[i].end });\r\n    }\r\n  }\r\n\r\n  //TODO: Convert item array to map, ids need to be autogenerated and unique.\r\n  getItemById(id) {\r\n    for (var i = 0; i < this.state.items.length; i++) {\r\n      if (this.state.items[i].id == id) {\r\n        return this.state.items[i];\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n\r\n\r\n  /************************************                    \r\n   ********   TIMELINE EVENT   ********            \r\n   ************************************/\r\n\r\n\r\n  /* Fired when double clicking inside the timeline */\r\n  optionsHandler = (props) => {\r\n    if (props.item != null) {\r\n      console.log(\"Item double-clicked\");\r\n    }\r\n  }\r\n\r\n  /* Fired continuously when moving the mouse inside the timeline */\r\n  mouseMoveHandler = (props) => {\r\n    if (props.item != null) {\r\n      console.log(props.item);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"prog-av\">\r\n        <div className=\"prog-av-user\">Leia Skywalker</div>\r\n        <div className=\"prog-av-container\">\r\n          <div>{this.props.name}</div>\r\n          <Timeline\r\n            ref={this.timelineRef}\r\n            selectHandler={this.selectHandler}\r\n            doubleClickHandler={this.optionsHandler}\r\n            mouseMoveHandler={this.mouseMoveHandler}\r\n            options={this.options}\r\n            items={this.state.items}\r\n            groups={this.state.groups} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default AllocationView;\r\n","import React, { Component } from \"react\";\r\n\r\nlet users = [\r\n    {\r\n        name: \"Vijay\",\r\n    },\r\n    {\r\n        name: \"Chris\",\r\n    },\r\n    {\r\n        name: \"erika\",\r\n\r\n    },\r\n    {\r\n        name: \"Filip\",\r\n\r\n    },\r\n    {\r\n        name: \"abc\",\r\n\r\n    },\r\n    {\r\n        name: \"cde\",\r\n    },\r\n    {\r\n        name: \"cgh\",\r\n    },\r\n\r\n];\r\n\r\nclass Search extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            searchString: \"\",\r\n            users: []\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            users: users\r\n        });\r\n        this.refs.search.focus();\r\n    }\r\n\r\n    handleChange() {\r\n        this.setState({\r\n            searchString: this.refs.search.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let _users = this.state.users;\r\n        let search = this.state.searchString.trim().toLowerCase();\r\n\r\n        if (search.length > 0) {\r\n            _users = _users.filter(function (user) {\r\n                return user.name.toLowerCase().match(search);\r\n            });\r\n        }\r\n\r\n        return (\r\n            <div className=\"pg-search\">\r\n                <h3>search persons</h3>\r\n                <div>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={this.state.searchString}\r\n                        ref=\"search\"\r\n                        onChange={this.handleChange}\r\n                        placeholder=\"type name here\"\r\n                    />\r\n                    <ul>\r\n                        {_users.map(l => {\r\n                            return (\r\n                                <li>\r\n                                    {l.name} <a href=\"#\">{l.email}</a>\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from \"react\";\r\nimport AllocationView from \"./allocation_view/allocationView\";\r\nimport Search from \"./persons_list/search\";\r\nimport \"./allocationTab.css\"\r\n\r\nclass AllocationTab extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"prog-at\">\r\n        <Search />\r\n        <AllocationView />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AllocationTab;\r\n","import React, { Component } from \"react\";\r\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\r\nimport \"react-bootstrap-table/dist/react-bootstrap-table-all.min.css\";\r\n\r\n//https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Welcome&selectedStory=react%20bootstrap%20table%202%20&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\r\n\r\nconst products = [];\r\n\r\nfunction addProduct(nam, sal, soc, inc) {\r\n  const id = products.length + 1;\r\n  products.push({\r\n    //id: id,\r\n    name: nam,\r\n    salary: sal,\r\n    social: soc,\r\n    increment: inc\r\n  });\r\n}\r\n\r\n// Dummy values below. Remove later.\r\n// vvv\r\nfunction rand() {\r\n  return Math.floor(Math.random() * 10000) + 1;\r\n}\r\naddProduct(\"Filip\", rand(), rand(), rand());\r\naddProduct(\"Christoffer\", rand(), rand(), rand());\r\naddProduct(\"Erika\", rand(), rand(), rand());\r\naddProduct(\"Sai\", rand(), rand(), rand());\r\naddProduct(\"Zaid\", rand(), rand(), rand());\r\naddProduct(\"Osamah\", rand(), rand(), rand());\r\naddProduct(\"Mohammed\", rand(), rand(), rand());\r\naddProduct(\"Matko\", rand(), rand(), rand());\r\n// ^^^\r\n// End of dummy values\r\n\r\nconst cellEditProp = {\r\n  mode: \"click\"\r\n};\r\n\r\nclass personTab extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.options = {\r\n      defaultSortName: \"name\",\r\n      defaultSortOrder: \"desc\"\r\n    };\r\n  }\r\n\r\n  createCustomInsertButton = openModal => {\r\n    return (\r\n      <button type=\"button\" class=\"btn btn-dark m-1\" onClick={openModal}>\r\n        Add\r\n      </button>\r\n    );\r\n  };\r\n\r\n  createCustomDeleteButton = onBtnClick => {\r\n    return (\r\n      <button type=\"button\" class=\"btn btn-dark m-1\" onClick={onBtnClick}>\r\n        Delete\r\n      </button>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const options = {\r\n      insertBtn: this.createCustomInsertButton,\r\n      deleteBtn: this.createCustomDeleteButton\r\n    };\r\n    const selectRow = {\r\n      mode: \"checkbox\"\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <BootstrapTable\r\n          data={products}\r\n          cellEdit={cellEditProp}\r\n          selectRow={selectRow}\r\n          options={options}\r\n          insertRow\r\n          deleteRow\r\n          tableStyle={{\r\n            backgroundColor: \"#eeeeee\"\r\n          }}\r\n        >\r\n          <TableHeaderColumn dataField=\"name\" isKey={true} dataSort={true}>\r\n            Name\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"salary\" dataSort={true}>\r\n            Salary\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"social\" dataSort={true}>\r\n            Social Factor\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"increment\" dataSort={true}>\r\n            Increment Factor\r\n          </TableHeaderColumn>\r\n        </BootstrapTable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default personTab;\r\n","import React, { Component } from \"react\";\r\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\r\nimport \"react-bootstrap-table/dist/react-bootstrap-table-all.min.css\";\r\n\r\n//https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Welcome&selectedStory=react%20bootstrap%20table%202%20&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\r\n\r\nconst products = [];\r\n\r\nfunction addProduct(nam, eDate, eSal, eOH, eOC, iSal, iOH, iOC, OHc, s) {\r\n  const id = products.length + 1;\r\n  products.push({\r\n    //id: id,\r\n    name: nam,\r\n    endDate: eDate,\r\n    extSalary: eSal,\r\n    extOverhead: eOH,\r\n    extOtherCosts: eOC,\r\n    intSalary: iSal,\r\n    intOverhead: iOH,\r\n    intOtherCosts: iOC,\r\n    OHconst: OHc,\r\n    stl: s\r\n  });\r\n}\r\n\r\nconst cellEditProp = {\r\n  mode: \"click\"\r\n};\r\n\r\nclass projectTab extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.options = {\r\n      defaultSortName: \"name\",\r\n      defaultSortOrder: \"desc\"\r\n    };\r\n  }\r\n\r\n  createCustomInsertButton = openModal => {\r\n    return (\r\n      <button type=\"button\" class=\"btn btn-dark m-1\" onClick={openModal}>\r\n        Add\r\n      </button>\r\n    );\r\n  };\r\n\r\n  createCustomDeleteButton = onBtnClick => {\r\n    return (\r\n      <button type=\"button\" class=\"btn btn-dark m-1\" onClick={onBtnClick}>\r\n        Delete\r\n      </button>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const options = {\r\n      insertBtn: this.createCustomInsertButton,\r\n      deleteBtn: this.createCustomDeleteButton\r\n    };\r\n    const selectRow = {\r\n      mode: \"checkbox\"\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <BootstrapTable\r\n          data={products}\r\n          cellEdit={cellEditProp}\r\n          selectRow={selectRow}\r\n          options={options}\r\n          insertRow\r\n          deleteRow\r\n          tableStyle={{\r\n            backgroundColor: \"#eeeeee\"\r\n          }}\r\n        >\r\n          <TableHeaderColumn dataField=\"name\" isKey={true} dataSort={true}>\r\n            Name\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"endDate\" dataSort={true}>\r\n            End Date\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"extSalary\" dataSort={true}>\r\n            Ext. Salary\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"extOverhead\" dataSort={true}>\r\n            Ext. Overhead\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"extOtherCosts\" dataSort={true}>\r\n            Ext. Other Costs\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"intSalary\" dataSort={true}>\r\n            Int. Salary\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"intOverhead\" dataSort={true}>\r\n            Int. Overhead\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"intOtherCosts\" dataSort={true}>\r\n            Int. Other Costs\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"OHconst\" dataSort={true}>\r\n            Overhead Const.\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"stl\" dataSort={true}>\r\n            STL\r\n          </TableHeaderColumn>\r\n        </BootstrapTable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default projectTab;\r\n","import React, { Component } from \"react\";\r\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\r\nimport \"react-bootstrap-table/dist/react-bootstrap-table-all.min.css\";\r\n\r\n//https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Welcome&selectedStory=react%20bootstrap%20table%202%20&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\r\n\r\nconst products = [];\r\n\r\nfunction addProduct(nam, sDate, eSal, eOH, eOC, iSal, iOH, iOC) {\r\n  const id = products.length + 1;\r\n  products.push({\r\n    //id: id,\r\n    name: nam,\r\n    spendingDate: sDate,\r\n    extSalary: eSal,\r\n    extOverhead: eOH,\r\n    extOtherCosts: eOC,\r\n    intSalary: iSal,\r\n    intOverhead: iOH,\r\n    intOtherCosts: iOC\r\n  });\r\n}\r\n\r\nconst cellEditProp = {\r\n  mode: \"click\"\r\n};\r\n\r\nclass spendingTab extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.options = {\r\n      defaultSortName: \"name\",\r\n      defaultSortOrder: \"desc\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <BootstrapTable\r\n          data={products}\r\n          cellEdit={cellEditProp}\r\n          tableStyle={{\r\n            backgroundColor: \"#eeeeee\"\r\n          }}\r\n        >\r\n          <TableHeaderColumn dataField=\"name\" isKey={true} dataSort={true}>\r\n            Name\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"spendingDate\" dataSort={true}>\r\n            End Date\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"extSalary\" dataSort={true}>\r\n            Ext. Salary\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"extOverhead\" dataSort={true}>\r\n            Ext. Overhead\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"extOtherCosts\" dataSort={true}>\r\n            Ext. Other Costs\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"intSalary\" dataSort={true}>\r\n            Int. Salary\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"intOverhead\" dataSort={true}>\r\n            Int. Overhead\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"intOtherCosts\" dataSort={true}>\r\n            Int. Other Costs\r\n          </TableHeaderColumn>\r\n        </BootstrapTable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default spendingTab;\r\n","import React, { Component } from \"react\";\r\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\r\nimport \"react-bootstrap-table/dist/react-bootstrap-table-all.min.css\";\r\n\r\n//https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Welcome&selectedStory=react%20bootstrap%20table%202%20&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\r\n\r\nconst products = [];\r\n\r\nfunction addProduct(nam, sDate, eSal, eOH, eOC, iSal, iOH, iOC) {\r\n  const id = products.length + 1;\r\n  products.push({\r\n    //id: id,\r\n    name: nam,\r\n    spendingDate: sDate,\r\n    extSalary: eSal,\r\n    extOverhead: eOH,\r\n    extOtherCosts: eOC,\r\n    intSalary: iSal,\r\n    intOverhead: iOH,\r\n    intOtherCosts: iOC\r\n  });\r\n}\r\n\r\nconst cellEditProp = {\r\n  mode: \"click\"\r\n};\r\n\r\nclass remainingTab extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.options = {\r\n      defaultSortName: \"name\",\r\n      defaultSortOrder: \"desc\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <BootstrapTable\r\n          data={products}\r\n          cellEdit={cellEditProp}\r\n          tableStyle={{\r\n            backgroundColor: \"#eeeeee\"\r\n          }}\r\n        >\r\n          <TableHeaderColumn dataField=\"name\" isKey={true} dataSort={true}>\r\n            Name\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"spendingDate\" dataSort={true}>\r\n            End Date\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"extSalary\" dataSort={true}>\r\n            Ext. Salary\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"extOverhead\" dataSort={true}>\r\n            Ext. Overhead\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"extOtherCosts\" dataSort={true}>\r\n            Ext. Other Costs\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"intSalary\" dataSort={true}>\r\n            Int. Salary\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"intOverhead\" dataSort={true}>\r\n            Int. Overhead\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"intOtherCosts\" dataSort={true}>\r\n            Int. Other Costs\r\n          </TableHeaderColumn>\r\n        </BootstrapTable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default remainingTab;\r\n","import React, { Component } from \"react\";\r\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\r\nimport \"react-bootstrap-table/dist/react-bootstrap-table-all.min.css\";\r\n\r\n//https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Welcome&selectedStory=react%20bootstrap%20table%202%20&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\r\n\r\nconst products = [];\r\n\r\nfunction addProduct(nam, eSal, iSal, eOH, iOH, eOC, iOC) {\r\n  const id = products.length + 1;\r\n  products.push({\r\n    //id: id,\r\n    name: nam,\r\n    extSalary: eSal,\r\n    intSalary: iSal,\r\n    extOverhead: eOH,\r\n    intOverhead: iOH,\r\n    extOtherCosts: eOC,\r\n    intOtherCosts: iOC\r\n  });\r\n}\r\nconst cellEditProp = {\r\n  mode: \"click\"\r\n};\r\n\r\nclass endBalanceTab extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.options = {\r\n      defaultSortName: \"name\",\r\n      defaultSortOrder: \"desc\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <BootstrapTable\r\n          data={products}\r\n          cellEdit={cellEditProp}\r\n          tableStyle={{\r\n            backgroundColor: \"#eeeeee\"\r\n          }}\r\n        >\r\n          <TableHeaderColumn dataField=\"name\" isKey={true} dataSort={true}>\r\n            Name\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"extSalary\" dataSort={true}>\r\n            Ext. Salary\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"intSalary\" dataSort={true}>\r\n            Int. Salary\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"extOverhead\" dataSort={true}>\r\n            Ext. Overhead\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"intOverhead\" dataSort={true}>\r\n            Int. Overhead\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"extOtherCosts\" dataSort={true}>\r\n            Ext. Other Costs\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"intOtherCosts\" dataSort={true}>\r\n            Int. Other Costs\r\n          </TableHeaderColumn>\r\n        </BootstrapTable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default endBalanceTab;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport NavigationBar from \"./components/navigationBar\";\r\nimport AllocationTab from \"./components/allocation_tab/allocationTab\";\r\nimport PersonTab from \"./components/personTab\";\r\nimport ProjectTab from \"./components/projectTab\";\r\nimport SpendingTab from \"./components/spendingTab\";\r\nimport RemainingTab from \"./components/remainingTab\";\r\nimport EndBalanceTab from \"./components/endBalanceTab\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      /*  Attach the diffenrent components her to build the whole UI */\r\n      <React.Fragment>\r\n        <NavigationBar />\r\n        <AllocationTab/>\r\n   { /*    <Route path=\"/allocationTable\" component={AllocationTab} />\r\n        <Route path=\"/personTable\" component={PersonTab} />\r\n        <Route path=\"/projectTable\" component={ProjectTab} />\r\n        <Route path=\"/spendingTable\" component={SpendingTab} />\r\n        <Route path=\"/remaningTable\" component={RemainingTab} />\r\n        <Route path=\"/endBalanceTable\" component={EndBalanceTab} /> */}\r\n      </React.Fragment>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport BrowserRouter from 'react-router-dom/BrowserRouter';\r\n\r\nconst app = (\r\n    <BrowserRouter>\r\n    <App />\r\n    </BrowserRouter>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}